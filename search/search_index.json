{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#home","title":"Home","text":"<p>This is where I will be documenting various modules related to school (for now).</p>"},{"location":"#markdown-syntax","title":"Markdown Syntax","text":"<p>for the sake of having some form of a guide.</p>"},{"location":"#italic","title":"Italic","text":"<p>Use the stars, my friend</p> <p>You can also change the strenth of the text, by adding more underscores</p>"},{"location":"#bold","title":"Bold","text":"<p>Use two stars, my friend</p> <p>You can also change the strenth of the text, by adding more stars</p>"},{"location":"#code","title":"Code","text":"<pre><code>Here's a beautiful code block\n</code></pre>"},{"location":"#blockquotes","title":"Blockquotes","text":"<p>crocodile for the win</p> <p>You can even add multiple paragraphs:</p> <p>wow</p> <p>how very interesting</p> <p>Not only that, but you can also nest them:</p> <p>WOW</p> <p>SO DAMN INTERESTING</p> <p>It's even possible to add some other elements, like bullet points.</p> <p>source: https://www.markdownguide.org/basic-syntax</p>"},{"location":"bbw-m141/","title":"M141 - Admin / Betrieb DBM","text":""},{"location":"bbw-m141/#m141-admin-betrieb-dbm","title":"M141 - Admin / Betrieb DBM","text":""},{"location":"bbw-m141/#start-stop-dbm","title":"Start / Stop DBM","text":"<pre><code>db2 START DBM\n\ndb2 STOP DBM FORCE\n</code></pre>"},{"location":"bbw-m141/#connect-to-database-disconnect-from-database","title":"Connect to database / Disconnect from database","text":"<pre><code>db2 CONNECT TO DBBW001\n\ndb2 CONNECTION RESET\n</code></pre>"},{"location":"bbw-m141/#run-sql-script-from-cli","title":"Run SQL script from CLI","text":"<pre><code>db2 -tvsf script.sql\n</code></pre>"},{"location":"bbw-m141/#grant-privileges-to-a-user-for-a-table","title":"Grant privileges to a user for a table","text":"<pre><code>db2 \"GRANT SELECT, INSERT, UPDATE, DELETE ON BIBLIO.TARTIKEL TO USER bbwuser;\"\n</code></pre> <p>then proceed to check privileges: <code>db2 SELECT * FROM SYSCAT.TABAUTH;</code></p>"},{"location":"bbw-m141/#backup-database","title":"Backup database","text":"<p>Offline</p> <pre><code>db2 backup database DBBW001 to /bbw/DBbackup\n</code></pre> <p>Online</p> <pre><code>db2 backup database DBBW001 online to /bbw/DBbackup\n</code></pre>"},{"location":"bbw-m141/#restore-database","title":"Restore database","text":"<p>The location specified after 'FROM' must be a directory, not a file.</p> <p>Make sure to select the timestamp that is equivalent to the one of your desired backup.</p> <pre><code>db2 \"RESTORE DB DBBW001 FROM /bbw/DBbackup/ TAKEN AT 20230417084512\"\n</code></pre>"},{"location":"bbw-m141/#update-database-config","title":"Update database config","text":"<p>From first test:</p> <pre><code>db2 update db cfg for dbbw001 using LOGRETAIN RECOVERY\n\ndb2 update db cfg for dbbw001 using AUTO_MAINT OFF\n\ndb2 update db cfg for dbbw001 using AUTO_DEL_REC_OBJ ON\n\n</code></pre> <p>From Ueb4</p> <pre><code>db2 update db cfg for dbbw001 using NEWLOGPATH '/bbw/activelog1'\n\ndb2 update db cfg for dbbw001 using MIRRORLOGPATH '/bbw/activelog2'\n\ndb2 update db cfg for dbbw001 using LOGARCHMETH1 DISK:/bbw/archlog1\n\ndb2 update db cfg for dbbw001 using LOGARCHMETH2 DISK:/bbw/archlog2\n\ndb2 update db cfg for dbbw001 using LOG RETAIN RECOVERY\n\ndb2 update db cfg for dbbw001 using AUTO_DEL_REC_OBJ ON\n</code></pre>"},{"location":"bbw-m141/#search-dbm-config","title":"Search DBM config","text":"<p>the parameter 'logprimary' is an example of a parameter to search for. make sure to specify the correct database after 'for'  </p> <pre><code>db2 get db cfg for dbbw001 | grep -i logprimary\n</code></pre>"},{"location":"bbw-m141/#rollforward-database-after-restore","title":"Rollforward database after restore","text":"<p>This is only necessary if the specified database is enabled for roll-forward recovery and it has been restored but not rolled forward. see https://www.ibm.com/docs/en/db2/10.5?topic=messages-sql1000-sql1249#sql1117n for more detail</p> <pre><code>db2 rollforward db DBBW001 to end of logs and stop\n</code></pre>"},{"location":"bbw-m169/","title":"Infos for Capture-the-flag Test on 10.07.2023","text":""},{"location":"bbw-m169/#infos-for-capture-the-flag-test-on-10072023","title":"Infos for Capture-the-flag Test on 10.07.2023","text":"<p>see https://bbwin.gitlab.io/m169-aws-fargate/iac/ for the previous assignment regarding CI/CD.</p>"},{"location":"bbw-m169/#gitlab-ciyml","title":"gitlab-ci.yml","text":"<pre><code>image: docker:23.0.4\n\nvariables:\n  DOCKER_HOST: tcp://docker:2375\n  DOCKER_TLS_CERTDIR: \"\"\n\nservices:\n  - docker:23.0.4-dind\n\npackage:\n  stage: build\n  before_script:\n    - apk add --no-cache py3-pip\n    - pip install awscli\n    - aws --version\n\n    - aws ecr get-login-password | docker login --username AWS --password-stdin $CI_AWS_ECR_REGISTRY\n\n  script:\n    - docker build --cache-from $CI_AWS_ECR_REGISTRY/$CI_AWS_ECR_REPOSITORY_NAME:latest -t $CI_AWS_ECR_REGISTRY/$CI_AWS_ECR_REPOSITORY_NAME:latest .\n    - docker push $CI_AWS_ECR_REGISTRY/$CI_AWS_ECR_REPOSITORY_NAME:latest\n</code></pre>"},{"location":"bbw-m169/#dockerfile","title":"Dockerfile","text":"<p>This is an example Dockerfile from the refcard03 Assignment.  Note that you may need to change some things depending on the application you receive for the test. For example the Java version may differ etc.   </p> <pre><code>FROM maven:3-openjdk-11-slim\n\nCOPY src /src\nCOPY pom.xml /\nRUN mvn -f pom.xml clean package\n\nRUN mv /target/*.jar app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n</code></pre> <p>It would be better to use a multi-stage version, because time will be crucial during the test.</p>"},{"location":"bbw-m300/","title":"M300 Vogel","text":""},{"location":"dhcp/","title":"DHCP-PXE","text":""},{"location":"dhcp/#auftrag-dhcp-pxe-m300-vogel","title":"Auftrag DHCP &amp; PXE M300 Vogel","text":"<p>Diese Dokumentation kombiniert beide Auftr\u00e4ge in einen grossen Auftrag. Ich habe diesen Auftrag auf meinem Client mit VMware Workstation Pro erledigt.  </p>"},{"location":"dhcp/#netzwerkplan","title":"Netzwerkplan","text":""},{"location":"dhcp/#installation-dhcp","title":"Installation DHCP","text":"<p>DHCP Auftrag DHCP Pr\u00e4si Ich habe eine Ubuntu VM installiert und drei Netzwerkadapter erstellt: - NAT - Vnet5 - Vnet6</p>"},{"location":"dhcp/#1-apt-packet-installieren","title":"1. APT-Packet installieren","text":"<pre><code>sudo apt update\nsudo apt install isc-dhcp-server\n</code></pre>"},{"location":"dhcp/#2-konfiguration-dhcp","title":"2. Konfiguration DHCP","text":"<p>Um unseren frisch installierten DHCP server zu konfigurieren, m\u00fcssen wir das File <code>/etc/dhcp/dhcpd.conf</code> bearbeiten. Folgende Konfiguration habe ich verwendet (Die MAC-Adressen habe ich von VMware ausgelesen):</p> <pre><code>default-lease-time 600;\nmax-lease-time 7200;\n\n# LAN\nsubnet 192.168.1.0 netmask 255.255.255.192 {\n  range 192.168.1.5 192.168.1.60;\n  option routers 192.168.1.2;\n  option domain-name-servers 1.1.1.1, 9.9.9.9;\n  # PXE-Server config\n  next-server 192.168.1.3;\n  filename \"lpxelinux.0\";\n}\n\nhost windowsclient {\n  hardware ethernet 00:0C:29:15:BC:DB;\n  fixed-address 192.168.1.4;\n}\n\nhost pxeserver {\n  hardware ethernet 00:50:56:2B:35:1A;\n  fixed-address 192.168.1.3;\n}\n</code></pre>"},{"location":"dhcp/#21-was-wurde-genau-konfiguriert","title":"2.1. Was wurde genau konfiguriert?","text":"<ul> <li><code>default-lease-time 600;</code>: Legt die Standard-Leasedauer f\u00fcr IP-Adressen auf 600 Sekunden (10 Minuten) fest.</li> <li><code>max-lease-time 7200;</code>: Setzt die maximale Leasedauer f\u00fcr IP-Adressen auf 7200 Sekunden (2 Stunden).</li> <li><code>subnet 192.168.1.0 netmask 255.255.255.192 { ... }</code>: Definiert Subnetz, IP-Range Router, DNS-Server und PXE-Server.</li> <li><code>host windowsclient { ... }</code>: Definiert einen Host mit der MAC-Adresse 00:0C:29:15:BC:DB und der festen IP-Adresse 192.168.1.4.</li> <li><code>host pxeserver { ... }</code>: Definiert einen Host mit der MAC-Adresse 00:50:56:2B:35:1A und der festen IP-Adresse 192.168.1.3.</li> </ul> <p>Anschliessend identifizieren wir unser Netzwerkinterface mittels <code>ip a</code> und tragen es bei <code>/etc/default/isc-dhcp-server</code> ein. Somit legen wir fest auf welchem Interface unser DHCP-server laufen sollte.</p> <pre><code>INTERFACESv4=\"ens33\"\n</code></pre>"},{"location":"dhcp/#3-statische-ip-vergeben","title":"3. Statische IP vergeben","text":"<p>Nun k\u00f6nnen wir unseren DHCP server eine statische IP geben unter: <code>/etc/netplan/00-installer-config.yaml</code> Ich habe die bereits vorhandene Version wie folgt \u00fcberschrieben.</p> <pre><code>network:\n  version: 2\n  ethernets:\n    ens33:\n      dhcp4: no\n      addresses:\n        - 192.168.1.2/26\n      nameservers:\n        addresses: [1.1.1.1, 9.9.9.9]\n</code></pre> <p>Danach folgenden Befehl auf\u00fchren: <code>sudo netplan apply</code></p>"},{"location":"dhcp/#4-dienst-neustarten-dhcp-testen","title":"4. Dienst neustarten &amp; DHCP testen","text":"<pre><code>sudo systemctl restart isc-dhcp-server.service\n</code></pre> <p>Nun sehen wir auf dem Windows Client die vergebene IP:</p> <p></p> <p>Allerdings hat der Client noch keinen Internetzugang.</p>"},{"location":"dhcp/#5-internetzugang-auf-dem-client-ermoglichen","title":"5. Internetzugang auf dem Client erm\u00f6glichen","text":"<pre><code>echo 1 &gt; /proc/sys/net/ipv4/ip_forward\niptables \u2013t nat \u2013A POSTROUTING \u2013o eth0 \u2013j MASQUERADE\n</code></pre>"},{"location":"dhcp/#wireshark","title":"Wireshark","text":"<p>Durch den Installer kann man sich mit leichtigkeit durchklicken.  </p> <p>Um den DHCP Traffic zu analysieren habe ich auf dem Windows client <code>ipconfig /renew</code> &amp; <code>ipconfig /release</code> ausgef\u00fchrt und dies mit Wireshark aufgenommen. Weil es etwas l\u00e4nger dauerte, gab es ein timeout. Deshalb sind im Bild 2-Mal Request &amp; ACK.</p> <p></p> <p></p>"},{"location":"dhcp/#dhcp-relay","title":"DHCP Relay","text":"<p>Um diesen Dienst zu verwenden, ben\u00f6tigt man ein DHCP Relay Agent. Der Agent wird ben\u00f6tigt, um Clients von einem separaten Netzwerk mit unserem DHCP-Server zu verbinden.</p>"},{"location":"dhcp/#1-apt-packet-installieren_1","title":"1. APT-Packet installieren","text":"<pre><code>sudo apt update\nsudo apt install isc-dhcp-relay\n</code></pre>"},{"location":"dhcp/#2-konfiguration","title":"2. Konfiguration","text":"<p>Folgendes config file wie folgt bearbeiten <code>/etc/default/isc-dhcp-relay</code>:</p> <pre><code>SERVERS=\"192.168.1.2\"\nINTERFACES=\"ens33\"\n</code></pre>"},{"location":"dhcp/#3-dienst-neustarten","title":"3. Dienst neustarten","text":"<pre><code>sudo systemctl restart isc-dhcp-relay\n</code></pre>"},{"location":"dhcp/#udhcpd","title":"udhcpd","text":"<p>Eine alternative zum <code>isc-dhcp-server</code> w\u00e4re <code>udhcpd</code>. Es wurde entwickelt, um eine ressourcenschonende Implementierung des DHCP-Protokolls bereitzustellen. Wie man sich also vorstellen kann, ist der Hauptvorteil von <code>udhcpc</code> der niedrige Ressourcenverbrauch im Vergleich zu <code>isc-dhcp-relay</code>, ist daf\u00fcr etwas limitierter was die Funktionalit\u00e4t angeht. Ich dachte zuerst, dass die neuste Version laut ihrer Webseite im Jahr 2002 ver\u00f6ffentlicht wurde. Das Debian Packet ist aber aktueller.</p>"},{"location":"dhcp/#1-apt-packet-installieren_2","title":"1. APT Packet installieren","text":"<pre><code>sudo apt install udhcpd\n</code></pre>"},{"location":"dhcp/#2-udhcpd-konfigurieren","title":"2. udhcpd konfigurieren","text":"<p><code>/etc/udhcpd.conf</code> mit gew\u00fcnschtem Texteditor \u00f6ffnen und wie folgt bearbeiten:  </p> <pre><code>start 192.168.1.5\nend 192.168.1.60\noption subnet 255.255.255.192\noption router 192.168.1.2\noption dns 1.1.1.1\noption lease 600\ninterface ens33\nlease_file /var/lib/misc/udhcpd.leases\nstatic_lease 00:0C:29:15:BC:DB 192.168.1.4\nstatic_lease 00:50:56:2B:35:1A 192.168.1.3\n</code></pre>"},{"location":"dhcp/#3-aktivieren-und-dienst-starten","title":"3. Aktivieren und Dienst starten","text":"<pre><code>sed -i '/DHCPD_ENABLED/ s/no/yes/' /etc/default/udhcpd\ntouch /var/lib/misc/udhcpd.leases\nupdate-rc.d udhcpd defaults\nsudo service udhcpd restart\n</code></pre> <p>Nun sehen wir auf dem Windows Client wieder die vergebene IP:</p> <p></p>"},{"location":"dhcp/#pxe","title":"PXE","text":"<p>Slitaz Download PXE Auftrag</p> <p>\"Beim Aufstarten des Clients soll dieser das Betriebssystem \u00fcber den PXE-Server beziehen und ordnungsgem\u00e4ss starten. Die Konfiguration und der Aufbau des Netzwerkes sollen ersichtlich sein.\"</p> <p>Das setup des PXE-Servers wurde NICHT auf der gleichen VM wie der DHCP vorgenommen. </p>"},{"location":"dhcp/#1-tftp-server-installieren","title":"1. TFTP-server installieren","text":"<p>Ein TFTP-Server ist erforderlich, um die Boot-Dateien \u00fcber das Netzwerk bereitzustellen.</p> <pre><code>apt install tftpd-hpa\nmkdir /srv/tftp\n</code></pre>"},{"location":"dhcp/#2-pxelinux-konfigurieren","title":"2. PXELinux konfigurieren","text":"<pre><code>apt install pxelinux syslinux-common\ncp /usr/lib/PXELINUX/lpxelinux.0 /srv/tftp/.\ncp /usr/lib/syslinux/modules/bios/ldlinux.c32 /srv/tftp/.\nmkdir /srv/tftp/pxelinux.cfg\n</code></pre> <p>Erstelle und bearbeite anschliessend diese Datei <code>/srv/tftp/pxelinux.cfg/default</code></p> <pre><code>default slitaz\nprompt 0\nlabel slitaz\n    menu label Slitaz\n    kernel slitaz/bzImage\n    append initrd=slitaz/rootfs4.gz,slitaz/rootfs3.gz,slitaz/rootfs2.gz,slitaz/rootfs1.gz rw root=/dev/null vga=normal autologin\n</code></pre>"},{"location":"dhcp/#21-was-wurde-hier-konfiguriert","title":"2.1. Was wurde hier konfiguriert?","text":"<p>PXELinux ist ein Bootloader, der speziell f\u00fcr das Booten \u00fcber das Netzwerk entwickelt wurde und auf Syslinux basiert. Wir installieren es mittels APT. Das <code>syslinux-common</code> Packet enth\u00e4lt einige Abh\u00e4ngikeiten f\u00fcr PXELinux. Hierbei werden <code>lpxelinux.0</code> und <code>ldlinux.c32</code> in das TFTP-Verzeichnis kopiert, da sie f\u00fcr den Bootvorgang ben\u00f6tigt werden. Zudem erstellen wir das Verzeichnis <code>/srv/tftp/pxelinux.cfg</code>, wo wir das <code>default</code> config file f\u00fcr PXELinux erstellen.  </p>"},{"location":"dhcp/#3-slitaz-an-den-richtigen-ort-kopieren","title":"3. Slitaz an den richtigen Ort kopieren","text":"<pre><code>cd ~\nwget http://mirror.slitaz.org/iso/4.0/slitaz-4.0.iso\nmount -o loop slitaz-4.0.iso /mnt\nmkdir /srv/tftp/slitaz\ncp /mnt/boot/bzImage /mnt/boot/rootfs* /srv/tftp/slitaz/.\numount /mnt\n</code></pre>"},{"location":"dhcp/#31-was-kopieren-wir-hier","title":"3.1. Was kopieren wir hier?","text":"<p>Hier werden die ben\u00f6tigten Dateien des Betriebssystems Slitaz heruntergeladen und gemountet. Anschliessend werden der Kernel (bzImage) und die initrd-Dateien (rootfs*) in das TFTP-Verzeichnis kopiert.</p>"},{"location":"dhcp/#4-setup-testen","title":"4. Setup Testen","text":""},{"location":"dhcp/#probleme","title":"Probleme","text":""},{"location":"dhcp/#1-netzwerkadapter","title":"1. Netzwerkadapter","text":"<p>Ich wusste nicht, wie ich mit den virtuellen Netzwerkadaptern umgehen musste. Ich habe einen NAT-Adapter und ein custom Netzwerksegment erstellt, doch mit dieser Konfiguration hatte ich keine Internetverbindung und dies lag daran, dass ich aus Versehen die ganze Konfiguration auf dem NAT-Adapter gemacht habe.</p> <p></p> <p>Weil ich den \u00dcberblick verloren habe, habe ich eine neue VM erstellt und mit einem NAT-Adapter + einem Vnet Adapter hinzugef\u00fcgt. Den NAT-Adapter habe ich nicht angefasst, der diente nur zur Internetverbindung. Die ganze Konfiguration wurde auf dem Vnet Adapter vorgenommen (Vnet 5 in meinem Fall).</p>"},{"location":"dhcp/#2-gateway","title":"2. Gateway","text":"<p> Ich habe eine Konfiguration im Internet gefunden, welche eine alte (depprecated) Konfiguration hatte. Man muss mittlerweile mittels <code>routes</code> den gateway setzen.</p>"},{"location":"dhcp/#3-internetzugang-client","title":"3. Internetzugang Client","text":"<p>Nun habe ich festgestellt, dass die <code>routes</code> Option ein Fehler war, weil er versucht hat, \u00fcber sich selbst zu routen und irgendeine zus\u00e4tzliche Default Route gesetzt hat, die reingefunkt hat. Anschliessend habe die <code>routes</code> Option entfernt.</p>"},{"location":"dhcp/#4-internetzugang-server","title":"4. Internetzugang Server","text":"<p>Obwohl ich einen NAT-Adapter habe, kann ich mit dem DHCP-Server nicht mehr auf das Internet zugreifen. Ich konnte bis jetzt nicht herausfinden warum. Wir tun jetzt einfach so, als w\u00e4re es ein Security Feauture. It's not a bug, it's a feature - a clever human being</p>"},{"location":"dhcp/#5-wireshark","title":"5. Wireshark","text":"<p>Zu Beginn habe ich nur <code>ipconfig renew</code> ausgef\u00fchrt ohne <code>ipconfig release</code>. Dies hat dazu gef\u00fchrt, dass ich nur den Acknowledge und den Request sehen konnte, weil der Client sich die restlichen Informationen bereits gemerkt hatte. So konnte ich keine vern\u00fcnftige Analyse durchf\u00fchren.</p>"},{"location":"dhcp/#reflexion","title":"Reflexion","text":"<p>Obwohl ich diese Aufgabe im Experts-Kurs bereits schon hatte, konnte ich doch etwas von diesem Auftrag profitieren. Grund daf\u00fcr sind die Zusatzauftr\u00e4ge und der erweiterte Zeitrahmen f\u00fcr die Aufgabe. Ich habe dazugelernt: - DHCP Relay in betrieb nehmen - udchpd aufsetzen - DHCP Traffic mit Wireshark analysieren - Allgemein besseres Verst\u00e4ndnis zu PXE &amp; DHCP</p>"},{"location":"dhcp/#quellen","title":"Quellen","text":"<ul> <li>Offizielle Installation <code>isc-dhcp-server</code> von Canonical https://ubuntu.com/server/docs/how-to-install-and-configure-isc-dhcp-server</li> <li>NAT Routing Ubuntu https://linuxhint.com/configure-nat-on-ubuntu/</li> <li>Setup Blog <code>isc-dhcp-relay</code> von Reintech https://reintech.io/blog/configure-dhcp-relay-agent-ubuntu-2004</li> </ul>"},{"location":"experts/","title":"My GitLab Setup","text":""},{"location":"experts/#my-gitlab-setup","title":"My GitLab Setup","text":"<p>The purpose of this assignment is to set up a GitLab Server as if it were for a large-scale company.</p> <p>My GitLab Server was setup in a personal PVE (Proxmox Virtual Environment) as a VM using Docker-Compose.</p>"},{"location":"experts/#installation-procedure","title":"Installation Procedure","text":""},{"location":"experts/#setup-an-ubuntu-server-and-install-docker-docker-compose","title":"Setup an Ubuntu Server and install Docker &amp; Docker-Compose","text":"<p>Follow this guide (official Docker installation guide)</p> <p>and this guide (official Docker-Compose installation guide) Note that after follwing the first guide Docker-Compose may already be installed.</p>"},{"location":"experts/#setup-gitlab-using-docker-compose","title":"Setup GitLab using Docker-Compose","text":"<p>Follow this guide</p> <p>It is recommended to export the <code>$GITLAB_HOME</code> variable like this: <code>export GITLAB_HOME=/srv/gitlab</code> and then adding this to <code>.bashrc</code> so you don't have to do it every time. However, this didn't work for me, so I ended up hard-coding them in the <code>docker-compose.yaml</code> file.</p> <p>I altered the <code>docker-compose.yaml</code> quite a lot from the one in the manual. I switched to the Commuity Edition of GitLab, altered the hostname to something I may use, hard-coded the <code>$GITLAB_HOME</code> variable (because it wasn't working) and added grafana &amp; prometheus. My file:  </p> <pre><code>version: '3.6'\nservices:\n  web:\n    image: 'gitlab/gitlab-ce:latest'\n    restart: always\n    container_name: gitlab\n    hostname: 'localhost'\n    environment:\n      GITLAB_OMNIBUS_CONFIG: |\n        external_url 'http://localhost:8929'\n        prometheus_monitoring['enable'] = true\n        prometheus['listen_address'] = 'localhost:9090'\n        # Add any other gitlab.rb configuration here, each on its own line\n    ports:\n      - '8929:8929'\n      - '9090:9090'\n    volumes:\n      - '/srv/gitlab/config:/etc/gitlab'\n      - '/srv/gitlab/logs:/var/log/gitlab'\n      - '/srv/gitlab/data:/var/opt/gitlab'\n    shm_size: '1g'\n  grafana:\n    image: 'grafana/grafana'\n    container_name: grafana\n    restart: unless-stopped\n    ports:\n      - '3000:3000'\n    volumes:\n      - grafana-storage:/var/lib/grafana\nvolumes:\n  grafana-storage: {}\n</code></pre>"},{"location":"experts/#monitoring-solution","title":"Monitoring Solution","text":"<p>I used Prometheus (which comes preinstalled with GitLab) and Grafana as my monitoring solution.</p> <p>For Grafana, follow this guide to set it up. It used to come shipped with GitLab just like Prometheus, but was deprecated in 16.0 and removed in 16.3. For this reason, I had to add it in as a separate container in the <code>docker-compose.yml</code> file.</p> <p>Once I had my Grafana Container up and running, I imported the Prometheus Metrics by adding a connection to <code>192.168.1.212:9090</code> (My Prometheus). When it comes to actually adding graphs / dashboards, I found that there are many premade ones here: https://grafana.com/grafana/dashboards/ Just download the JSON and import it into Grafana.</p>"},{"location":"experts/#gitlab-runner-setup","title":"GitLab Runner Setup","text":"<p>For the GitLab Runner, I made a separate VM for resource management purposes. Since nothing else is running on this VM, there is no need to use Docker-Compose.</p> <p>Just like before, I used this guide to install Docker. Then I proceeded to create a volume to store persistant data: <code>docker volume create gitlab-runner-config</code></p> <p>To run the GitLab Runner, use:  </p> <pre><code>docker run -d --name gitlab-runner --restart always \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v gitlab-runner-config:/etc/gitlab-runner \\\n    gitlab/gitlab-runner:alpine\n</code></pre> <p>Note that I am using the <code>alpine</code> image because it is more lightweight. The other option would be to use the <code>latest</code> tag which uses <code>ubuntu</code>.</p> <p>Now we need to register this Runner. In your GitLab Settings you can add a runner, which will enable you to generate an authentication token. I ran this command on my Runner VM (setup in non-interactive mode):  </p> <pre><code>docker run --rm -v /srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner:alpine register \\\n  --non-interactive \\\n  --url \"192.168.1.212\" \\\n  --token \"$RUNNER_TOKEN\" \\\n  --executor \"docker\" \\\n  --docker-image alpine:latest \\\n  --description \"docker-runner\"\n</code></pre> <p>Then create a project with a CI-CD Pipeline and add the runner to the project.</p>"},{"location":"experts/#why-only-one-runner","title":"Why only one Runner?","text":""},{"location":"experts/#gitlab-conifguration","title":"GitLab Conifguration","text":""},{"location":"nextcloud-auftrag/","title":"Nextcloud auftrag","text":"<p>Nextcloud installieren wir mittels snap. Man kann bereits bei der Installation einer Ubuntu Server vm spezifizeren, dass man Nextcloud installieren m\u00f6chte.</p> <p>Snap bietet zwar den Vorteil, dass man Pakete sehr leicht mit einem Klick installieren kann, wird jedoch trotzdem von vielen Ubuntu-usern verabscheut.</p> <p>https://snapcraft.io/install/nextcloud/ubuntu</p> <p>https://chat.openai.com/share/fc9fea12-cc87-497f-bd57-31a54410a7a4</p> <p>https://chat.openai.com/share/f77371e3-b100-439f-8bc3-5f99b193a814</p>"},{"location":"nextcloud-auftrag/#installation-von-nextcloud-mittels-snap","title":"Installation von Nextcloud mittels snap","text":"<pre><code>sudo snap install nextcloud  \nsudo nextcloud.manual-install\n</code></pre> <p>Man kann auch mittels snap verifizieren, ob der Server l\u00e4uft oder nicht.  </p> <pre><code>sudo snap services nextcloud\n</code></pre> <pre><code>sudo vim /var/snap/nextcloud/current/nextcloud/config/config.php\n</code></pre> <p>In diesem File unter <code>trusted domains</code>, seine gew\u00fcnschte Dom\u00e4ne hinzuf\u00fcgen.</p>"},{"location":"nextcloud-auftrag/#manual-install","title":"Manual Install","text":""},{"location":"pruefung-security/","title":"Security","text":""},{"location":"pruefung-security/#prufung-19062023","title":"Pr\u00fcfung 19.06.2023","text":""},{"location":"pruefung-security/#ueb1","title":"Ueb1","text":""},{"location":"pruefung-security/#linuxusererstellensh","title":"Linuxusererstellen.sh","text":"<p>Linux user add script for preparation.  </p> <pre><code>cat  /etc/group\n\n# Erstellen der Gruppen\ngroupadd dbusrgrp \ngroupadd dbadmgrp\ngroupadd dbuser10\ngroupadd dbuser11\ngroupadd dbuser12\n\n\n# Anzeige welche User existieren:\ncat /etc/passwd\n\n# Erstellen der User (UserID und PW sind identisch)\nuseradd -p $(openssl passwd -1 dbuser10) -g dbuser10  -G dbuser10           -s /bin/bash -c \"Test user dbuser10\"  -d /home/dbuser10   dbuser10\nuseradd -p $(openssl passwd -1 dbuser11) -g dbuser11  -G dbuser11,dbusrgrp  -s /bin/bash -c \"Test user dbuser11\"  -d /home/dbuser11   dbuser11\nuseradd -p $(openssl passwd -1 dbuser12) -g dbuser12  -G dbuser12,dbadmgrp  -s /bin/bash -c \"Test user dbuser12\"  -d /home/dbuser12   dbuser12\n</code></pre>"},{"location":"pruefung-security/#ueb1_grant_usersql","title":"Ueb1_GRANT_User.sql","text":"<pre><code>GRANT DATAACCESS ON DBBW001 TO GROUP dbusrgrp;\nGRANT DATAACCESS ON DBBW002 TO GROUP dbusrgrp;\n\nGRANT DBADM ON DATABASE DBBW001 TO GROUP dbadmgrp WITHOUT DATAACCESS;\nGRANT DBADM ON DATABASE DBBW002 TO GROUP dbadmgrp WITHOUT DATAACCESS;\n</code></pre>"},{"location":"pruefung-security/#ueb2","title":"Ueb2","text":"<p>The objective of this assignment was to make the pre-written scripts function. You may have to run <code>db2 CONNECT TO &lt;database-name&gt;</code> after you have run the pre-written scripts, as they have a connection reset command in them.</p>"},{"location":"pruefung-security/#ueb2_grant_usersql","title":"Ueb2_GRANT_User.sql","text":"<pre><code>--\n-- Autorisierungen f\u00fcr User dbuser10\n--\n\nGRANT CONNECT ON DATABASE TO USER dbuser10;\nGRANT USAGE ON WORKLOAD SYSDEFAULTUSERWORKLOAD TO USER dbuser10;\nGRANT EXECUTE ON PACKAGE NULLID.SQLC2P31 TO USER dbuser10;\nGRANT SELECT ON TABLE BIBLIO.TARTIKEL TO USER dbuser10;\n\n--\n-- Autorisierungen f\u00fcr User dbuser11\n--\n\nGRANT CONNECT ON DATABASE TO USER dbuser11;\nGRANT USAGE ON WORKLOAD SYSDEFAULTUSERWORKLOAD TO USER dbuser11;\nGRANT SELECT ON TABLE BIBLIO.TARTIKEL TO USER dbuser11;\n\n--\n-- Autorisierungen f\u00fcr User dbuser12\n--\n\nGRANT EXECUTE ON PACKAGE NULLID.SQLC2P31 TO USER dbuser12;\nGRANT SELECT ON TABLE BIBLIO.TARTIKEL TO USER dbuser12;\n</code></pre>"},{"location":"pruefung-security/#ueb3","title":"Ueb3","text":"<p>The premise of this assignment is the same as Ueb2. To connect to a Database as a simple Database user, use this command: </p> <pre><code>db2 CONNECT TO DBBW002 USER dbuser10 USING dbuser10\n</code></pre>"},{"location":"pruefung-security/#ueb3_grant_usersql","title":"Ueb3_GRANT_User.sql","text":"<pre><code>--\n-- Speichern Sie in diesem SQL Script die notwendigen GRANT Statements\n--\n\n--\n-- Autorisierungen f\u00fcr User dbuser10\n--\n\nGRANT CREATETAB ON DATABASE TO USER dbuser10;\nGRANT IMPLICIT_SCHEMA ON DATABASE TO USER dbuser10;\nGRANT USE OF TABLESPACE USERSPACE1 TO USER dbuser10;\n\n--\n-- Autorisierungen f\u00fcr User dbuser11\n--\n\nGRANT CREATETAB ON DATABASE TO USER dbuser11;\nGRANT IMPLICIT_SCHEMA ON DATABASE TO USER dbuser11;\nGRANT USE OF TABLESPACE USERSPACE1 TO USER dbuser11;\n\n--\n-- Autorisierungen f\u00fcr User dbuser12\n--\n\nGRANT CREATETAB ON DATABASE TO USER dbuser12;\n</code></pre>"},{"location":"pruefung-security/#ueb4","title":"Ueb4","text":"<p>In this assignment, you must create a database role that has certain permissions on certain tables. After that, you must create two UNIX users that have the newly created role (in this case: TESTER)</p>"},{"location":"pruefung-security/#ueb4_grant_rolesql","title":"Ueb4_GRANT_ROLE.sql","text":"<pre><code>--\n-- Speichern Sie in diesem SQL Script die notwendigen GRANT Statements\n--\n\nCREATE ROLE TESTER;\n\n--\n-- Autorisierungen f\u00fcr User dbuser10\n--\n\nGRANT SELECT, INSERT, UPDATE, DELETE ON DBUSER10.TDBS_PERSON TO TESTER;\nGRANT SELECT, INSERT, UPDATE, DELETE ON DBUSER10.TDBS_ABTEILUNG TO TESTER;\n\n--\n-- Autorisierungen f\u00fcr User dbuser11\n--\n\nGRANT SELECT, INSERT, UPDATE, DELETE ON DBUSER11.TDBS_PERSON TO TESTER;\nGRANT SELECT, INSERT, UPDATE, DELETE ON DBUSER11.TDBS_ABTEILUNG TO TESTER;\n\n--\n-- Autorisierungen f\u00fcr User dbuser12\n--\n\nGRANT SELECT, INSERT, UPDATE, DELETE ON DBUSER12.TDBS_PERSON TO TESTER;\nGRANT SELECT, INSERT, UPDATE, DELETE ON DBUSER12.TDBS_ABTEILUNG TO TESTER;\n\n</code></pre> <p>Afterwards, you must assign this role to the users (in this case tester01 and tester02).</p> <pre><code>db2 GRANT TESTER TO USER tester01;\ndb2 GRANT TESTER TO USER tester02;\n</code></pre> <p>Lastly, I had to enable the Workload for the users.</p> <pre><code>db2 GRANT USAGE ON WORKLOAD SYSDEFAULTUSERWORKLOAD TO ROLE TESTER;\n</code></pre>"},{"location":"pxe-mitschnitt/","title":"Mitschnitt-DHCP-PXE-Debian","text":"<pre><code>b## 2022-03-08, lp5jvogel\n## Slitaz per PXE / Debian 11\n## DHCP SERVER in Betrieb nehmen\napt update\napt install isc-dhcp-server\nvi /etc/dhcp/dhcpd.conf\n# ACHTUNG: Mac-Adresse anpassen!\n----8&lt;-------8&lt;----- /etc/dhcp/dhcpd.conf\nauthoritative;\nsubnet 192.168.0.0 netmask 255.255.255.0  {\n}\n\nhost client {\n   fixed-address 192.168.0.10;\n   hardware ethernet 08:00:27:e8:30:46;\n   option routers 192.168.0.1;\n   option host-name \"client\";\n   next-server 192.168.0.1;\n   filename \"gpxelinux.0\";\n}\n----&gt;8-------&gt;8----- /etc/dhcp/dhcpd.conf\nip a add 192.168.0.10/24 up dev enp0s3\nservice isc-dhcp-server restart\n\n\n## TFTP SERVER in Betrieb nehmen\napt install tftpd\nmkdir /srv/tftp\n\n## PXELinux in Betrieb nehmen\napt install pxelinux syslinux-common\ncp /usr/lib/PXELINUX/gpxelinux.0 /srv/tftp/.\ncp /usr/lib/syslinux/modules/bios/ldlinux.c32 /srv/tftp/.\nmkdir /srv/tftp/pxelinux.cfg\nvi /srv/tftp/pxelinux.cfg/default\n----8&lt;----8&lt;-- /srv/tftp/pxelinux.cfg/default\ndefault slitaz\nprompt 0\nlabel slitaz\n    menu label Slitaz\n    kernel slitaz/bzImage\n    append initrd=slitaz/rootfs4.gz,slitaz/rootfs3.gz,slitaz/rootfs2.gz,slitaz/rootfs1.gz rw root=/dev/null vga=normal autologin\n----&gt;8----&gt;8-- /srv/tftp/pxelinux.cfg/default\n\n## Slitaz an den richtigen Ort kopieren\ncd ~\nwget http://mirror.slitaz.org/iso/4.0/slitaz-4.0.iso\nmount -o loop slitaz-4.0.iso /mnt\nmkdir /srv/tftp/slitaz\ncp /mnt/boot/bzImage /mnt/boot/rootfs* /srv/tftp/slitaz/.\numount /mnt\n\n## alles eingerichtet, jetzt Client booten\n</code></pre>"},{"location":"zli-m109/","title":"ZLI Module 109","text":""},{"location":"zli-m109/#zli-module-109","title":"ZLI Module 109","text":"<p>\"Dienste in der Public Cloud betreiben und \u00fcberwachen\" Course: https://moodle.zli.ch/course/view.php?id=1610</p>"},{"location":"zli-m109/#auftrag-11-einfache-html-seite-erstellen-und-mit-ftp-deployen","title":"Auftrag 1.1: Einfache HTML Seite erstellen und mit FTP \u00abdeployen\u00bb","text":""},{"location":"zli-m109/#auftrag-22-git-zur-sourcecode-und-konfigurationsverwaltung","title":"Auftrag 2.2: Git zur Sourcecode- und Konfigurationsverwaltung","text":"<p>https://moodle.zli.ch/mod/h5pactivity/view.php?id=116428 https://github.com/Sephley/Zli-m109</p> <p>Configure git username &amp; email</p> <pre><code>git config --global user.name \"user\"\n\ngit config --global user.email \"mail@mail.com\"\n</code></pre>"},{"location":"zli-m109/#auftrag-23-github-einfuhrung","title":"Auftrag 2.3: GitHub Einf\u00fchrung","text":"<p>https://github.com/Sephley/Zli-m109</p>"},{"location":"zli-m109/#auftrag-32","title":"Auftrag 3.2:","text":"<pre><code>sudo apt install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common\n</code></pre>"},{"location":"zli-m109/#intallation-minikube","title":"Intallation minikube","text":"<p>Minikube can create a cluster containing only one node.</p> <pre><code>sudo apt install curl wget apt-transport-https -y  \nwget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64  \nsudo cp minikube-linux-amd64 /usr/local/bin/minikube  \nsudo chmod +x /usr/local/bin/minikube  \ncurl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl  \nsudo mv kubectl /usr/local/bin/  \nchmod +x kubectl  \nminikube start --driver=docker  \nminikube addons enable ingress  \nminikube addons enable dashboard  \nminikube addons enable metrics-server  \nsudo reboot  \n</code></pre>"},{"location":"zli-m109/#auftrag-42-container-orchestration-mit-docker-compose","title":"Auftrag 4.2: Container Orchestration mit Docker Compose","text":"<p>see https://docs.docker.com/compose/gettingstarted/ for how to set up a generic docker-compose application</p> <p>see https://github.com/Sephley/m109-site for all the files</p> <p>Docker-compose requires a docker-compose.yml file that can set up multiple Containers. Using <code>docker compose up</code> you start the containers</p>"},{"location":"zli-m109/#kubernetes","title":"Kubernetes","text":""},{"location":"zli-m109/#pod","title":"Pod","text":"<p>The Pod is the smallest unit in Kubernetes, usually only runs 1 Application. Each Pod gets its own IP address, not the container. They are rather ephemeral, which means they are prone to crash.  </p>"},{"location":"zli-m109/#service","title":"Service","text":"<p>is used to attach an IP address to a pod, so that if it dies, the new one just uses the service to retain the IP address. It is possible to specify, whether the service is internal or external.</p>"},{"location":"zli-m109/#ingress","title":"Ingress","text":"<p>Forwards IP-address of pod to domain name of application.</p>"},{"location":"zli-m109/#configmap","title":"ConfigMap","text":"<p>Is the external Configuration of your application. Is only for non-confidential data! Unless you use secret to encrypt it.</p>"},{"location":"zli-m109/#volumes-storage","title":"Volumes / Storage","text":"<p>Attaches a physical storage to a Pod, can be locally connected or also via Cloud. Think of it as an external drive plugged in to the kubernetes cluster.</p>"},{"location":"zli-m109/#deployment","title":"Deployment","text":"<p>A deployment is a template for creating pods.</p>"},{"location":"zli-m109/#kubernetes-configuration","title":"Kubernetes Configuration","text":"<p>deployments get sent to the API server. Each config file (written in yml) has 3 parts. The metadata, the specification and the third part defines the type of configuration (like service or deployment). Kubernetes always compares the desired state with the actual state and then does anything it can to reach the desired state if that is not the case.</p>"},{"location":"zli-m109/#minikube-kubernetes-ganz-einfach","title":"Minikube - Kubernetes ganz einfach","text":"<p>see https://github.com/sephley/dev_minikube also https://kubernetes.io/docs/home/</p> <p>Note that the names 'mongo-config' or 'mongo-secret' do not need to be named this way. Kubernetes uses the 'name: ' key to differenciate between stuff.</p>"},{"location":"zli-m109/#mongo-configyml","title":"mongo-config.yml","text":"<p><code>mongo-config.yml</code> is the ConfigMap Configuration File. You should only create this once as you will reference it a lot.</p>"},{"location":"zli-m109/#mongo-secretyml","title":"mongo-secret.yml","text":"<p><code>mongo-secret.yml</code> add your encode secrets (username and password) into this file. to encode you can run: <code>echo -n &lt;word to encode&gt; | base64</code> Once you have added these values they can be referenced by different deployments.</p>"},{"location":"zli-m109/#mongoyml","title":"mongo.yml","text":"<p><code>mongo.yml</code> the <code>spec</code> section of the file specifys the deployment specific stuff like type of webserver. the <code>template</code> section is like a whole new deployment with its own <code>spec</code> section etc. It configures the Pod within the deployment. You also set your docker image here.</p> <p><code>lables</code> are key/value pairs. They are for identifiying the \"family\" of the pods, so that for example two pods with the same label would have similar application running on them. Lables are required of Pods and are good practice for anythin else. You can call the labes whatever you want, it just has to be in key/value format like: \"app: nginx\" or \"mykey: myvalue\". \"app:\" is the standard key.</p> <p><code>selector</code> defines that all the pods that have label x belong to deployment y.</p> <p><code>replicas</code> defines how many pods you want to create with the deployment.</p>"},{"location":"zli-m109/#webappyml","title":"webapp.yml","text":"<p><code>webapp.yml</code> is very similar to te <code>mongo.yml</code> file, as it is what runs the webservice based on the mongodb. The deployment is exactly the same, except for labels and the extra envirionment variable.</p> <p>You can reference things from other files using <code>valueFrom</code>. This applies to all files.</p> <p><code>type: Nodeport</code> The nodePort is used to make the service available externally. Must be between 30000-32767. </p>"},{"location":"zli-m109/#deployment_1","title":"Deployment","text":"<pre><code>kubectl apply -f mongo-config.yaml  \nkubectl apply -f mongo-secret.yaml  \nkubectl apply -f mongo.yaml  \nkubectl apply -f webapp.yaml\n</code></pre> <p><code>kubectl get all</code> outputs all the components created in the cluster, whicht includes deployments, pods and all the services.</p> <p><code>kubectl get</code> can be used for everything in the cluster, like secrets, configmap, pods etc. Example: <code>kubectl get secret</code></p> <p><code>kubectl --help</code> for help lol. You can also use the <code>--help</code> parameter for <code>kubectl get</code> more specific help.</p> <p><code>kubectl describe service webapp-service</code> to get info on your webapp deployment. Outputs stuff like IP, name, port etc. also works for pods: <code>kubectl describe pod mongo-deployment-564b4bdfdf-jx66n</code> you can see name of pod from <code>kubectl get</code> output.</p> <p><code>kubectl logs mongo-deployment-564b4bdfdf-jx66n</code> to see logs.</p> <p><code>minikube ip</code> to get IP. Now your application is accessible in your webbrowser. Remember to specify the external port (nodePort).</p>"},{"location":"zli-m109/#auftrag-7-quotes-app","title":"Auftrag 7: Quotes App","text":"<p>Username: joshur (namespace = joshur-dev)</p> <p>API token: sha256~sIwXmH5DFLbWQHjn3RFzq2VvJGurkt2QN2xeFdV9h8Y </p> <p>Login command:  oc login --token=sha256~sIwXmH5DFLbWQHjn3RFzq2VvJGurkt2QN2xeFdV9h8Y --server=https://api.sandbox-m3.1530.p1.openshiftapps.com:6443</p>"},{"location":"zli-m109/#variables","title":"Variables","text":"<p>Username (username): <code>joshur</code> Authorization token (token): <code>sha256~sIwXmH5DFLbWQHjn3RFzq2VvJGurkt2QN2xeFdV9h8Y</code> API server URL (api_server_url): <code>https://api.sandbox-m3.1530.p1.openshiftapps.com:6443</code> Name of the cluster (cluster_name): <code>api-sandbox-m3-1530-p1-openshiftapps-com:6443</code> Context assigned to us (context): <code>joshur-dev/api-sandbox-m3-1530-p1-openshiftapps-com:6443/joshur</code></p>"},{"location":"zli-m109/#set-local-kubernetes-configuration","title":"Set Local Kubernetes configuration","text":"<p>Make sure to run the login command listed above before you proceed!</p> <p>Set credentials: <code>kubectl config set-credentials joshur/api-sandbox-m3-1530-p1-openshiftapps-com:6443 --token sha256~sIwXmH5DFLbWQHjn3RFzq2VvJGurkt2QN2xeFdV9h8Y</code> Set cluster: <code>kubectl config set-cluster api-sandbox-m3-1530-p1-openshiftapps-com:6443 --server=https://api.sandbox-m3.1530.p1.openshiftapps.com:6443</code> Set context: <code>kubectl config set-context joshur-dev/api-sandbox-m3-1530-p1-openshiftapps-com:6443/joshur --user=joshur/https://api.sandbox-m3.1530.p1.openshiftapps.com:6443 --namespace=joshur-dev --cluster=api-sandbox-m3-1530-p1-openshiftapps-com:6443</code> Use context: <code>kubectl config use-context joshur-dev/api-sandbox-m3-1530-p1-openshiftapps-com:6443/joshur</code></p>"},{"location":"zli-m109/#create-files","title":"Create files","text":"<p>First, clone the repositories that contain the yml files we need. <code>git clone https://github.com/redhat-developer-demos/quotesweb.git</code> <code>git clone https://github.com/redhat-developer-demos/quotemysql.git</code> <code>git clone https://github.com/redhat-developer-demos/qotd-python.git</code></p> <p>Create the following files in the qotd-python/k8s directory  </p> <pre><code>kubectl create -f quotes-deployment.yaml  \nkubectl create -f service.yaml  \nkubectl create -f route.yaml\n</code></pre> <p>use <code>kubectl get routes</code> to view your new routes. run <code>curl https://quotes-joshur-dev.apps.sandbox-m3.1530.p1.openshiftapps.com/quotes</code> to see your file.</p>"},{"location":"zli-m109/#repo-links","title":"repo links","text":"<p>https://github.com/redhat-developer-demos/quotesweb/ https://github.com/redhat-developer-demos/qotd-python/ https://github.com/redhat-developer-demos/quotemysql/</p>"},{"location":"zusatz-pruefung/","title":"Zusatz-Security","text":""},{"location":"zusatz-pruefung/#federated-datasources","title":"Federated Datasources","text":"<p>Note that you will also need to hand in a documentation for this assignment. Assignment</p>"},{"location":"zusatz-pruefung/#part-1","title":"Part 1","text":"<ul> <li>connect to dbbw004 and run the scripts from Olat as user db2inst1</li> <li>add this command to the <code>CONFIG_DATABASE.sql</code> file</li> </ul> <pre><code>update db cfg for dbbw004 using LOGSECOND 200;\n</code></pre> <ul> <li>run the script <code>HRACCESS_Create.sql</code>. </li> <li>run the script <code>HRACCESS_LOAD_DATA.sql</code>. This will take a while.</li> <li>run the script <code>HRACCESS_COUNT_ROWS.sql</code> This verifies if the Data was loaded.</li> <li>create a linux user called <code>m141fed</code>. To do so, run the following command as root:</li> </ul> <pre><code>useradd -p $(openssl passwd -1 m141fed) -s /bin/bash m141fed -d /home/m141fed\n</code></pre> <p>Then proceed to grant all the priviliges the user needs and save them in the script <code>HRACCESS_GRANT_m141fed.sql</code></p>"},{"location":"zusatz-pruefung/#hraccess_grant_m141fedsql","title":"HRACCESS_GRANT_m141fed.sql","text":"<pre><code>GRANT CONNECT ON DATABASE TO USER m141fed;\nGRANT USAGE ON WORKLOAD SYSDEFAULTUSERWORKLOAD TO USER m141fed;\nGRANT EXECUTE ON PACKAGE NULLID.SQLC2P31 TO USER m141fed;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.DEPARTMENTS TO USER m141fed;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.DEPT_EMP TO USER m141fed;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.DEPT_MANAGER TO USER m141fed;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.EMPLOYEES TO USER m141fed;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.SALARIES TO USER m141fed;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.TITLES TO USER m141fed;\n</code></pre>"},{"location":"zusatz-pruefung/#part-2","title":"Part 2","text":"<ul> <li>configure federated datasources as documented in the db2 Knowledge Center All the commands should be saved into the script <code>HRREMOTE_Create.sql</code>. You should also create a script <code>HRREMOTE_Drop.sql</code> where you remove all the data.</li> </ul> <p>For this part you must be connected to DBBW003! First run this: <code>UPDATE DBM CFG USING FEDERATED YES;</code> and proceed to restart your DBM (it's probably easier to simply restart the VM)</p>"},{"location":"zusatz-pruefung/#hrremote_createsql","title":"HRREMOTE_Create.sql","text":"<pre><code>CATALOG TCPIP NODE db2_node REMOTE system42 SERVER db2tcp42;\n\n-- Wrapper registrieren\nCREATE WRAPPER DRDA;\n\n-- Server Definitionen registrieren\nCREATE SERVER BBW TYPE DB2/LUW VERSION 11 WRAPPER DRDA AUTHORIZATION \"db2inst1\" PASSWORD \"db2inst1\" OPTIONS (DBNAME 'DBBW004') ;\n\n-- User Mapping erstellen, um dem Benutzer den Zugriff auf den remote server zu geben\nCREATE USER MAPPING FOR DB2INST1 SERVER BBW OPTIONS (REMOTE_AUTHID 'db2inst1', REMOTE_PASSWORD 'db2inst1');\n\n-- Nicknames aus DBBW004 hinzuf\u00fcgen\nCREATE NICKNAME HRREMOTE.DEPARTMENTS FOR BBW.HRACCESS.DEPARTMENTS;\nCREATE NICKNAME HRREMOTE.DEPT_MANAGER FOR BBW.HRACCESS.DEPT_MANAGER;\nCREATE NICKNAME HRREMOTE.EMPLOYEES FOR BBW.HRACCESS.EMPLOYEES;\nCREATE NICKNAME HRREMOTE.DEPT_EMP FOR BBW.HRACCESS.DEPT_EMP;\nCREATE NICKNAME HRREMOTE.TITLES FOR BBW.HRACCESS.TITLES;\nCREATE NICKNAME HRREMOTE.SALARIES FOR BBW.HRACCESS.SALARIES;\n</code></pre>"},{"location":"zusatz-pruefung/#hrremote_dropsql","title":"HRREMOTE_Drop.sql","text":"<pre><code>-- Nicknames l\u00f6schen\nDROP NICKNAME HRREMOTE.DEPARTMENTS;\nDROP NICKNAME HRREMOTE.DEPT_MANAGER;\nDROP NICKNAME HRREMOTE.EMPLOYEES;\nDROP NICKNAME HRREMOTE.DEPT_EMP;\nDROP NICKNAME HRREMOTE.TITLES;\nDROP NICKNAME HRREMOTE.SALARIES;\n\n-- User Mapping l\u00f6schen\nDROP USER MAPPING FOR DB2INST1 SERVER BBW;\n\n-- Server-Definition l\u00f6schen\nDROP SERVER BBW;\n\n-- Wrapper l\u00f6schen\nDROP WRAPPER DRDA;\n\n-- Node entfernen\nUNCATALOG NODE db2_node;\n</code></pre> <p>After running the script <code>HRREMOTE_Create.sql</code>, run <code>HRREMOTE_CHECK_ACCESS.sql</code>.</p>"},{"location":"zusatz-pruefung/#hraccess_grant_bbwusersql","title":"HRACCESS_GRANT_bbwuser.sql","text":"<ul> <li>Create a script named <code>HRACCESS_GRANT_bbwuser.sql</code></li> <li>Connect to dbbw004</li> <li>Add the following content to the script and run the script.  </li> </ul> <pre><code>GRANT CONNECT ON DATABASE TO USER bbwuser;\nGRANT USAGE ON WORKLOAD SYSDEFAULTUSERWORKLOAD TO USER bbwuser;\nGRANT EXECUTE ON PACKAGE NULLID.SQLC2P31 TO USER bbwuser;\nGRANT EXECUTE ON PACKAGE NULLID.SYSSN200 TO USER bbwuser;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.DEPARTMENTS TO USER bbwuser;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.DEPT_EMP TO USER bbwuser;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.DEPT_MANAGER TO USER bbwuser;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.EMPLOYEES TO USER bbwuser;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.SALARIES TO USER bbwuser;\nGRANT SELECT, INSERT, UPDATE, DELETE ON HRACCESS.TITLES TO USER bbwuser;\n</code></pre> <p>If this was successful, you can connect to dbbw003 as bbwuser and run the script <code>HRREMOTE_CHECK_ACCESS.sql</code> .</p> <p>If this was not successful, run the following command as <code>db2inst1</code> in dbbw003.  </p> <pre><code>CREATE USER MAPPING FOR BBWUSER SERVER BBW OPTIONS (REMOTE_AUTHID 'bbwuser', REMOTE_PASSWORD 'bbwuser');\n</code></pre>"},{"location":"acme/","title":"M300 Auftrag ACME","text":""},{"location":"acme/#m300-auftrag-acme","title":"M300 Auftrag ACME","text":""},{"location":"acme/#auftrag","title":"Auftrag","text":""},{"location":"acme/#vorkenntnisse","title":"Vorkenntnisse","text":"<p>Im Gesch\u00e4ft setzen wir wo immer m\u00f6glich automatisierte Zertifikatserneuerung ein. Dies erfolgt auf den Linux Servern meist via Cronjob, welches das acme-tiny Python Skript regelm\u00e4ssig ausf\u00fchrt. F\u00fcr unser Wildcard Zertifikat kam Certbot schon oftmals in Frage, hat man aber bis jetzt noch nicht umgesetzt. Oder schon?</p>"},{"location":"acme/aufgaben/","title":"Aufgaben","text":""},{"location":"acme/aufgaben/#aufgaben","title":"Aufgaben","text":"<ul> <li> = fertig</li> <li> = WIP</li> </ul> <p>Checkliste der Aufgaben gem\u00e4ss Olat:</p> <ul> <li> Certbot in Betrieb nehmen</li> <li> Certbot mit Wildcard Zertifikat in Betrieb nehmen</li> <li> Certbot mit Wildcard Zertifikat in Betrieb nehmen (gesch\u00e4ftsumfeld)</li> </ul>"},{"location":"acme/aufgaben/certbot-basic/","title":"Certbot-Basic","text":""},{"location":"acme/aufgaben/certbot-basic/#basisinstallation-von-certbot","title":"Basisinstallation von Certbot","text":"<ul> <li> Certbot in Betrieb nehmen</li> </ul> <p>Certbot ist ein Open-Source Tool, welches automatisch Let's Encrypt Zertifikate generieren kann.</p>"},{"location":"acme/aufgaben/certbot-basic/#voraussetzungen","title":"Voraussetzungen","text":"<p>Um Certbot f\u00fcr mich auszutesten, habe ich es auf meinem Linode installiert. Auf meinem Linode ist ein nginx Webserver auf Ubuntu 24.04 installiert.</p> <p>Selbstverst\u00e4ndlich ben\u00f6tigt man bei dem DNS-Provider auch ein Record, der auf den Linode zeigt.</p>"},{"location":"acme/aufgaben/certbot-basic/#installation","title":"Installation","text":"<p>Da snap nun die offiziell-unterst\u00fctzte Installationsmethode ist, verwenden wir snap.</p> <p>https://certbot.eff.org/instructions?ws=nginx&amp;os=ubuntufocal</p> <p>Zuerst sorgen wir daf\u00fcr, dass Certbot nicht bereits installiert ist.</p> <pre><code>sudo apt-get remove certbot\n</code></pre> <p>Danach k\u00f6nnen wir Certbot mittels Snap installieren.</p> <pre><code>sudo snap install --classic certbot\n</code></pre> <p>Mittels diesem n\u00e4chsten Befehl k\u00f6nnen wir Certbot nicht nur ein Zertifikat ausstellen, sondern es wird auch die <code>nginx</code> config f\u00fcr HTTPS angepasst.</p> <pre><code>sudo certbot --nginx\n</code></pre> <p></p> <p></p> <p>Somit haben wir ein Zertifikat ausgestellt.</p> <p></p>"},{"location":"acme/aufgaben/certbot-basic/#probleme-anmerkungen","title":"Probleme / Anmerkungen","text":"<p>Keine, die Installation erfolgte reibungslos. Es hat mich wirklich \u00fcberrascht, wie leicht es funktioniert hat.</p>"},{"location":"acme/aufgaben/certbot-bind/","title":"Certbot-mit-Bind9","text":""},{"location":"acme/aufgaben/certbot-bind/#certbot-mit-bind9-in-betrieb-nehmen","title":"Certbot mit Bind9 in Betrieb nehmen","text":"<ul> <li> Certbot mit Wildcard Zertifikat in Betrieb nehmen (gesch\u00e4ftsumfeld)</li> </ul> <p>Im Gesch\u00e4ft stellen wir unsere Wildcard Zertifikate manuell aus, denn es sei zu riskant ist dies zu automatisieren.</p> <p>Das ist nat\u00fcrlich bl\u00f6dsinn, denn ein funktionierender Automatismus macht keine Fehler und ist gar weniger riskant als wenn ein Mensch es manuell macht.</p> <p>Das einzige Risiko, welches besteht, ist wenn Certbot einen breaking change einf\u00fchrt und es niemand merkt.</p> <p>Am idealsten w\u00e4re es warscheinlich wenn wir unsere Wildcard Zertifikate ganz ersetzen w\u00fcrden, siehe Glossar.</p>"},{"location":"acme/aufgaben/certbot-bind/#bind-dns-fur-letsencrypt-aufsetzen","title":"Bind DNS f\u00fcr Letsencrypt aufsetzen","text":"<p>Wir setzen Bind9 als DNS ein, also m\u00fcssen wir diesen umkonfigurieren. Hierf\u00fcr verwende ich die Anleitung aus Olat.</p>"},{"location":"acme/aufgaben/certbot-bind/#installation","title":"Installation","text":"<p>Wir verwenden im Gesch\u00e4ft kein snap, also wir m\u00fcssen eine andere Installationsmethode suchen.</p> <p>Pip ist gem\u00e4ss der offiziellen Doku eine Alternative zu snap. Diese Methode ist f\u00fcr uns geeignet, da Python und Pip standardm\u00e4ssig auf unseren Servern installiert sind.</p> <p>Also k\u00f6nnen wir folgende Anleitung verwenden: https://certbot.eff.org/instructions?ws=nginx&amp;os=pip&amp;tab=wildcard</p>"},{"location":"acme/aufgaben/certbot-bind/#1-pakete-installieren-entfernen","title":"1. Pakete installieren / entfernen","text":"<p>m\u00fcssen wir nicht, da diese bei uns Standardm\u00e4ssig installiert sind, aber so w\u00fcrde es funktionieren:</p> <pre><code>sudo apt update\nsudo apt install python3 python3-venv libaugeas0\n</code></pre> <p>Dann sorgen wir daf\u00fcr, dass Certbot nicht bereits installiert ist.</p> <pre><code>sudo apt-get remove certbot\n</code></pre>"},{"location":"acme/aufgaben/certbot-bind/#2-python-virtual-envrionment-erstellen","title":"2. Python virtual envrionment erstellen","text":"<pre><code>sudo python3 -m venv /opt/certbot/\nsudo /opt/certbot/bin/pip install --upgrade pip\n</code></pre>"},{"location":"acme/aufgaben/certbot-bind/#3-certbot-installieren","title":"3. Certbot installieren","text":"<pre><code>sudo /opt/certbot/bin/pip install certbot certbot-nginx\n</code></pre> <p>Dann noch den Symlink erstellen um den <code>certbot</code> Befehl ausf\u00fchren zu k\u00f6nnen.</p> <pre><code>sudo ln -s /opt/certbot/bin/certbot /usr/bin/certbot\n</code></pre>"},{"location":"acme/aufgaben/certbot-bind/#4-certbot-plugin-installieren","title":"4. Certbot Plugin installieren","text":"<p>Da wir Bind9 einsetzen, ben\u00f6tigen wir das dns-rfc2136 Plugin.</p>"},{"location":"acme/aufgaben/certbot-bind/#automatische-ernuerung","title":"Automatische Ernuerung","text":"<p>Die automatische Ernuerung kann man via Cronjob erzielen.</p> <pre><code>echo \"0 0,12 * * * root /opt/certbot/bin/python -c 'import random; import time; time.sleep(random.random() * 3600)' &amp;&amp; sudo certbot renew -q\" | sudo tee -a /etc/crontab &gt; /dev/null\n</code></pre>"},{"location":"acme/aufgaben/certbot-bind/#certbot-einsetzen","title":"Certbot einsetzen","text":"<pre><code>sudo certbot \\\n--server https://acme-v02.api.letsencrypt.org/directory \\\n--manual --preferred-challenges dns \\\n-d *.cloudynerd.us -d *.scm.cloudynerd.us\n</code></pre>"},{"location":"acme/aufgaben/certbot-bind/#certbot-updaten","title":"Certbot updaten","text":"<p>Certbot updaten mir gem\u00e4ss vorgabe monatlich, um die Security auf dem neusten Stand zu halten. Um das oben-genannte Risiko zu vermeiden, lesen wir die Release Notes vor jedem Update.</p> <pre><code>sudo /opt/certbot/bin/pip install --upgrade certbot certbot-nginx certbot-dns-rfc2136\n</code></pre>"},{"location":"acme/aufgaben/certbot-bind/#probleme-anmerkungen","title":"Probleme / Anmerkungen","text":"<p>Diese Methode wurde noch nicht angenommen (bis 08.07.2024 noch nicht), da ich es noch in der Sitzung besprechen muss. Wie oben erw\u00e4hnt w\u00e4re das Ersetzen der Wildcard Zertifkate evtl. auch eine L\u00f6sung.</p> <p>Ich denke es w\u00e4re aber Sinnvoll, dies zu implementieren. F\u00fcr die regul\u00e4ren Zertifikate haben wir ja schon eine L\u00f6sung mit Cronjob und acme-tiny.</p>"},{"location":"acme/aufgaben/certbot-cloudflare/","title":"Certbot-mit-Cloudflare","text":""},{"location":"acme/aufgaben/certbot-cloudflare/#certbot-mit-cloudflare-in-betrieb-nehmen","title":"Certbot mit Cloudflare in Betrieb nehmen","text":"<ul> <li> Certbot mit Wildcard Zertifikat in Betrieb nehmen</li> </ul> <p>Da ich die Dom\u00e4ne sephley.com besitze, kann ich die Funktionalit\u00e4t gleich austesten. Weil ich die Dom\u00e4ne bei Cloudflare gekauft habe konnte ich Certbot mit dem Cloudflare DNS integrieren siehe https://certbot-dns-cloudflare.readthedocs.io/en/stable/.</p> <p>Um dies zu testen werde ich ein Wildcard Zertifikat f\u00fcr meine Dom\u00e4ne mittels Certbot erstellen und automatisch erneuern lassen.</p> <p>Wir nehmen die Basisinstalltion vor bis zu <code>sudo snap install --classic certbot</code>.</p> <p>Danach machen wir einen Symlink, damit wir auf der Maschine den <code>certbot</code> Befehl ausf\u00fchren k\u00f6nnen.</p> <pre><code>sudo ln -s /snap/bin/certbot /usr/bin/certbot\n</code></pre> <p>Jetzt setzen wir die erforderlichen Berechtigungen f\u00fcr den Shell-Befehl <code>certbot</code>.</p> <pre><code>sudo snap set certbot trust-plugin-with-root=ok\n</code></pre> <p>Nun installieren wir das Cloudflare Plugin.</p> <pre><code>sudo snap install certbot-dns-cloudflare\n</code></pre> <p>Das Cloudflare Plugin kann nicht einfach so funktionieren, man muss zuerst die erforderliche Konfiguration f\u00fcr die Autehntifizierung vornehmen. Und zwar ben\u00f6tigen wir ein config file mit unseren Cloudflare API credentials. Diese credentials holen wir von https://dash.cloudflare.com/profile/api-tokens.</p> <p></p> <p>Gem\u00e4ss der offiziellen Doku von Certbot brauchen wir einen Token mit den Berechtigungen <code>Zone:DNS:Edit</code>.  </p> <p>von https://certbot-dns-cloudflare.readthedocs.io/en/stable/#credentials </p> <p>Also w\u00e4hlen wir dieses Template. </p> <p>Und schon haben wir unseren Token. Ich habe nun die Datei <code>/token/cloudflare.ini</code> erstellt und darin den Token abgespeichert.</p> <pre><code># Cloudflare API token used by Certbot\ndns_cloudflare_api_token = &lt;your-token&gt;\n</code></pre> <p>Nun kann ich wie folgt mein Wildcard Zertifikat generieren:</p> <pre><code>certbot certonly \\\n  --dns-cloudflare \\\n  --dns-cloudflare-credentials /token/cloudflare.ini \\\n  -d www.sephley.com\n</code></pre> <p></p>"},{"location":"acme/aufgaben/certbot-cloudflare/#probleme-anmerkungen","title":"Probleme / Anmerkungen","text":"<p>Als ich das erste Mal den certbot Befehl ausgef\u00fchrt habe, erwartete ich, dass das Zertifikat aktiviert werden sollte. Dies war aber nicht der Fall, denn mit <code>certbot certonly</code> wird das Zertifikat zwar ausgestellt, jedoch nicht aktivert.</p> <p>Somit war ist das gar keine ACME implementation, denn es sollte voll-automatisert funktionieren.</p>"},{"location":"acme/fazit/","title":"Fazit","text":""},{"location":"acme/fazit/#fazit","title":"Fazit","text":"<p>Ich konnte sehr viel aus diesem Auftrag gewinnen.</p> <ol> <li> <p>Ich habe ein cooles tool besser kennengelernt</p> </li> <li> <p>Ich konnte es erfolgreich einsetzen</p> </li> <li> <p>Ich konnte im Gesch\u00e4ftsumfeld damit etwas bewirken</p> </li> <li> <p>Ich konnte mein Proxy im Homelab aufschm\u00fccken</p> </li> </ol> <p>Die Zeit die ich darin investiert habe hat sich meiner Meinung nach ausgezahlt.</p>"},{"location":"acme/glossar/","title":"Glossar","text":""},{"location":"acme/glossar/#glossar","title":"Glossar","text":"<ul> <li> = fertig</li> <li> = WIP</li> </ul> <p>Checkliste meiner selbst-definierten Themen:</p> <ul> <li> Was ist ACME?</li> <li> Let's Encrypt Zertifikate</li> <li> Wildcard Zertifikate</li> <li> Was ist DNS-01?</li> </ul>"},{"location":"acme/glossar/acme/","title":"Was-ist-ACME","text":""},{"location":"acme/glossar/acme/#was-ist-acme","title":"Was ist ACME?","text":"<p>ACME ist ein Protokoll, das die automatische Verwaltung von SSL/TLS-Zertifikaten erm\u00f6glicht. Es wird von Let's Encrypt verwendet, um Zertifikate auszustellen und zu erneuern. Im Jahr 2012 erkannte die Internet Security Research Group (ISRG), dass viele Webseitenbetreiber Schwierigkeiten hatten, SSL/TLS-Zertifikate manuell zu erneuern. Dies f\u00fchrte oft zu abgelaufenen Zertifikaten, was nicht nur Sicherheitsrisiken, sondern auch Vertrauensverlust bei den Nutzern zur Folge hatte. Um dieses Problem zu l\u00f6sen, entwickelte die ISRG das Let's Encrypt-Projekt, eine kostenlose, automatisierte und offene Zertifizierungsstelle. Das Herzst\u00fcck dieses Projekts war das ACME-Protokoll (Automated Certificate Management Environment), das es Servern erm\u00f6glichte, Zertifikate automatisch zu beantragen und zu erneuern.</p> <p>ACME revolutionierte die Art und Weise, wie Zertifikate verwaltet werden. Es automatisierte die bisher manuellen und fehleranf\u00e4lligen Prozesse und stellte sicher, dass Webseiten stets mit aktuellen Zertifikaten gesch\u00fctzt sind.</p> <p>Wie man ACME einsetzen sollte, ist schwer zu sagen, denn es gibt sehr viele Anwendungsmethonden (siehe https://letsencrypt.org/docs/client-options/).</p> <p>Grunds\u00e4tzlich hilft es, wenn man eine L\u00f6sung nimmt, welche gut mit der verwendetetn Umgebung zu integrieren ist. Beispielsweise w\u00fcrde ich etwas Shell-basiertes verwenden, da ich mit damit bestens auskenne.</p> <p>Allerdings w\u00fcrde jemand, der sich mit Docker auskennt eher eine L\u00f6sung wie letsproxy verwenden.</p>"},{"location":"acme/glossar/dns-01/","title":"DNS-01","text":""},{"location":"acme/glossar/dns-01/#dns-01","title":"DNS-01","text":"<p>DNS-01 ist eine Art von Challenge-Mechanismus, der von dem ACME Protokoll verwendet wird, um zu verifizieren, dass ein Antragsteller die Kontrolle \u00fcber eine Domain-name hat.</p> <p>Es ist die einzige ACME-Challenge, die zur Verifizierung von Wildcard-Zertifikaten verwendet werden kann, da es bei Wildcard-Zertifikaten nicht praktikabel ist, jede Subdomain einzeln zu verifizieren, bietet DNS-01 eine skalierbare L\u00f6sung.</p> <p>HTTP-01 ist einfacher f\u00fcr \u00f6ffentlich zug\u00e4ngliche Webserver und beinhaltet die Erstellung einer Datei an einem bestimmten Ort auf dem Webserver, unterst\u00fctzt aber keine Wildcard-Zertifikate.</p>"},{"location":"acme/glossar/lets-encrypt/","title":"Let's-Encrypt-Zertifikate","text":""},{"location":"acme/glossar/lets-encrypt/#lets-encrypt-zertifikate","title":"Let's Encrypt Zertifikate","text":"<p>https://letsencrypt.org/</p>"},{"location":"acme/glossar/lets-encrypt/#uber-lets-encrypt","title":"\u00dcber Let's Encrypt","text":"<p>Let\u2019s Encrypt ist eine freie, automatisierte und offene Zertifizierungsstelle (CA) und l\u00e4uft f\u00fcr die \u00d6ffentlichkeit. Der Dienst wird zur Verf\u00fcgung gestellt von Internet Security Research Group (ISRG).</p> <p>Die Schl\u00fcsselprinzipien hinter Let\u2019s Encrypt sind:</p> <ul> <li>Frei: Jeder, der einen Domainnamen besitzt, kann Let\u2019s Encrypt benutzen, um sichere Zertifikate kostenfrei zu erhalten.</li> <li>Automatisch: Die Software die auf dem Webserver l\u00e4uft, kann auf einfache Website mit Let\u2019s Encrypt Zertifikate beziehen, zur Benutzung abgesichert werden und automatisch Zertifikate erneuern.</li> <li>Sicher: Let\u2019s Encrypt stellt eine Plattform f\u00fcr erweiterte TLS-Sicherheit zur Verf\u00fcgung, sowohl auf der CA-Seite als auch beim Betreiber, um ihn bei der Absicherung seines Servers zu unterst\u00fctzen.</li> <li>Transparent: Alle ausgestellten und widerrufenen Zertifikate werden \u00f6ffentlich f\u00fcr jedermann zur Inspektion zur Verf\u00fcgung gestellt.</li> <li>Offen: Das automatische Ausstellungs- und Erneuerungsprotokoll wird als offener Standard ver\u00f6ffentlicht, damit es andere adaptieren k\u00f6nnen.</li> <li>Kooperativ: \u00c4hnlich wie die zugrundeliegenden Internetprotokolle selbst ist Let\u2019s Encrypt eine gemeinsame Anstrengung, die der Community zugute kommt und ausserhalb der Kontrolle einer einzelnen Organisation liegt.</li> </ul>"},{"location":"acme/glossar/lets-encrypt/#funktionilitat-von-lets-encrypt","title":"Funktionilit\u00e4t von Let's Encrypt","text":"<p>https://letsencrypt.org/getting-started/</p> <p>Um ein Zertifikat bei Let's Encrypt zu generieren muss man auf folgende URL zugreifen k\u00f6nnen: <code>https://acme-v02.api.letsencrypt.org/directory</code></p> <p>Diese URL ist das ACME Directory. Es dient als Entrypoint f\u00fcr ACME-Clients, um die verf\u00fcgbaren Endpoints f\u00fcr die Interaktion mit der CA zu ermitteln. Das Directory ist ein JSON-Objekt, das eine Reihe von URLs f\u00fcr verschiedene vom ACME-Server bereitgestellte Dienste enth\u00e4lt.</p> <p>Es gibt sehr viele Wege, um ein Let's Encrypt Zertifikat auszustellen.</p>"},{"location":"acme/glossar/wildcard/","title":"Wildcard-Zertifikate","text":""},{"location":"acme/glossar/wildcard/#wildcard-zertifikate","title":"Wildcard Zertifikate","text":"<p>Ein Wildcard-Zertifikat wird f\u00fcr eine Domain und alle ihre Subdomains ausgestellt. Anstatt ein separates Zertifikat f\u00fcr jede Subdomain zu ben\u00f6tigen, kann ein Wildcard-Zertifikat f\u00fcr z.B. *.example.com sowohl www.example.com, mail.example.com, als auch jede andere Subdomain von example.com abdecken.</p> <p>Die gr\u00f6sste Sorge bei Wildcard-Zertifikaten besteht darin, dass bei einem Ausfall eines Servers oder einer Subdom\u00e4ne, die von der Wildcard abgedeckt wird, alle Subdom\u00e4nen gef\u00e4hrdet sein k\u00f6nnen.  Mit anderen Worten: Die anf\u00e4ngliche Einfachheit der Wildcard kann zu erheblichen Problemen f\u00fchren, wenn etwas schief geht.</p>"},{"location":"acme/homelab/","title":"Homelab","text":""},{"location":"acme/homelab/#homelab","title":"Homelab","text":"<p>ACME kann auch sehr gut mit Traefik verwendet werden, habe ich Dank dieser Aufgabe erfahren.</p>"},{"location":"acme/homelab/traefik/","title":"ACME-in-Traefik","text":""},{"location":"acme/homelab/traefik/#acme-in-traefik","title":"ACME in Traefik","text":"<p>https://doc.traefik.io/traefik/https/acme/</p> <p>Ich setze zurzeit einen Traefik reverse Proxy in meiner privaten Umgebung auf. Vor kurzen habe ich herausgefunden, dass dieser auch ACME unterst\u00fctzt.</p> <p>Also habe ich mir vorgenommen, ACME bestm\u00f6glich zu integrieren. Mein Traefik Proxy l\u00e4uft dockerized auf einer Ubuntu-VM. Ich verwende eine Cloudflare Dom\u00e4ne.</p> <p>Die Integration mit Cloudflare funktioniert mit dem <code>/etc/traefik/traefik.yml</code> file</p> <pre><code>  production:\n    acme:\n      email: mail@clusterstack.net\n      storage: /etc/traefik/certs/acme.json\n      caServer: \"https://acme-v02.api.letsencrypt.org/directory\"\n      dnsChallenge:\n        provider: cloudflare\n        resolvers:\n          - \"1.1.1.1:53\"\n          - \"8.8.8.8:53\"\n</code></pre> <p>Somit werden meine Zertifikate automatisch erneuert.</p>"},{"location":"dns/","title":"DNS Modul 300","text":""},{"location":"dns/#dns-modul-300","title":"DNS Modul 300","text":"<p>Link zum Auftrag </p>"},{"location":"dns/#vorwissen","title":"Vorwissen","text":"<p>Ich habe bereits im Gesch\u00e4ft einen Bind9 DNS-Server aufgesetzt. Dies ist nun schon zwei Jahre her, von dem her bin ich also, doch froh kann ich dies erneut tun. Mit DynDNS habe ich auch schon in meiner privaten Infrastruktur Erfahrungen gemacht.</p>"},{"location":"dns/#aufbau","title":"Aufbau","text":"<p>Die praktischen Aufgaben mit den pers\u00f6nlichen Erfahrungen finden Sie unter dem praktischen Block. Das Glossar dient als Hilfsmittel, um den praktischen Teil zu verstehen.</p>"},{"location":"dns/#quellen","title":"Quellen","text":""},{"location":"dns/#glossar","title":"Glossar","text":"<ul> <li>DNS Zone file Erkl\u00e4rung von Cloudflare https://www.cloudflare.com/learning/dns/glossary/dns-zone/ </li> <li>Primary / Secondary Konzept von Cloudflare https://www.cloudflare.com/learning/dns/glossary/primary-secondary-dns/</li> </ul>"},{"location":"dns/#bind9","title":"Bind9","text":"<ul> <li>Bind9 setup von Linuxtechi https://www.linuxtechi.com/install-configure-bind-9-dns-server-ubuntu-debian/</li> <li>Bind9 setup von Cherryservers https://www.cherryservers.com/blog/how-to-install-and-configure-a-private-bind-dns-server-on-ubuntu-22-04</li> <li>Bind9 offizielle Dokumentation https://bind9.readthedocs.io/en/latest/chapter3.html</li> <li>Bind9 als Secondary DNS von Serverspace https://serverspace.io/support/help/bind9-as-a-secondary-dns-server-on-ubuntu/</li> </ul>"},{"location":"dns/glossar/","title":"Glossar","text":""},{"location":"dns/glossar/#glossar","title":"Glossar","text":"<p>Ich werde diesen Abschnitt referenzieren, wenn ich bei dem praktischen Teil etwas begr\u00fcnden oder belegen m\u00f6chte. Hier ist nicht nur Theorie, sondern auch Beispiele aus meinem Gesch\u00e4ft sowie aus der Freizeit / pers\u00f6nlichen Umgebung. </p> <ul> <li> = fertig</li> <li> = WIP</li> </ul> <p>Checkliste der Auftr\u00e4ge gem\u00e4ss Olat:</p> <ul> <li> Erkl\u00e4ren Sie die Zonendatei inkl. allen Parametern im SOA.</li> <li> Recherchieren Sie \u00fcber die Anf\u00e4nge des Internets und setzen Sie die Primary / Secondary DNS-Infrastruktur in den Zusammenhang des redundanten dezentralen Konzepts.</li> <li> Recherchieren Sie verschiedene Record-Typen und erkl\u00e4ren Sie diese.</li> <li> DynDNS hat einige spannende Probleme zu entdecken: Wie ist das mit den Timeouts? Wie l\u00f6sen die das mit den vielen Anfragen? Wie ist DynDNS eigentlich entstanden?</li> <li> DNS unter IPv6 \u2013 was \u00e4ndert sich?</li> <li> Reverse DNS unter IPv6: https://tech.rana.at/2017/12/08/</li> </ul> <p>Damit es nochmals geschrieben steht, DNS steht bedeutet ausgeschrieben: \"Domain Name System\".</p>"},{"location":"dns/glossar/beginning/","title":"Anf\u00e4nge-des-Internets","text":""},{"location":"dns/glossar/beginning/#anfange-des-internets","title":"Anf\u00e4nge des Internets","text":"<ul> <li> Recherchieren Sie \u00fcber die Anf\u00e4nge des Internets und setzen Sie die Primary / Secondary DNS-Infrastruktur in den Zusammenhang des redundanten dezentralen Konzepts.</li> </ul> <p>Der Ursprung des DNS liegt in den fr\u00fchen Tagen des Internets, als es noch ARPANET hiess und nur wenige Forscher und Institutionen miteinander vernetzt waren. Zu dieser Zeit wurden Hostnamen und ihre zugeh\u00f6rigen IP-Adressen in einer einzigen Datei namens \"HOSTS.TXT\" verwaltet, die zentral gepflegt wurde.</p> <p>In den 1980er Jahren wurde das DNS-Konzept entwickelt, um diese Probleme zu l\u00f6sen.</p> <p>Im praktischen Teil k\u00f6nnen Sie sehen wie ich das implementiert habe, wobei ich keine geographische Verteilung implementiert habe, w\u00e4re aber eigentlich Teil des redundanten dezentralen Konzepts.</p>"},{"location":"dns/glossar/dnsipv6/","title":"DNS-unter-IPv6","text":""},{"location":"dns/glossar/dnsipv6/#dns-unter-ipv6","title":"DNS unter IPv6","text":"<ul> <li> DNS unter IPv6 \u2013 was \u00e4ndert sich?</li> </ul>"},{"location":"dns/glossar/dnsipv6/#reverse-dns-unter-ipv6","title":"Reverse DNS unter IPv6","text":"<ul> <li> Reverse DNS unter IPv6: https://tech.rana.at/2017/12/08/</li> </ul>"},{"location":"dns/glossar/dyndns/","title":"DynDNS","text":""},{"location":"dns/glossar/dyndns/#dyndns","title":"DynDNS","text":"<ul> <li> DynDNS hat einige spannende Probleme zu entdecken: Wie ist das mit den Timeouts? Wie l\u00f6sen die das mit den vielen Anfragen? Wie ist DynDNS eigentlich entstanden?</li> </ul> <p>DynDNS (Dynamic Domain Name System) ist ein Dienst, der es erm\u00f6glicht, eine st\u00e4ndig wechselnde IP-Adresse, wie sie bei vielen Internet Service Providern (ISPs) f\u00fcr Privatkunden \u00fcblich ist, mit einem festen Domainnamen zu verkn\u00fcpfen.</p>"},{"location":"dns/glossar/dyndns/#handling-von-timeouts","title":"Handling von Timeouts","text":"<ul> <li>Update-Intervalle: Die Client-Software sendet regelm\u00e4ssig Updates, um sicherzustellen, dass die DNS-Eintr\u00e4ge aktuell sind. Dies kann in festgelegten Intervallen (z.B. alle 5 Minuten) oder bei Erkennung einer IP-\u00c4nderung geschehen.</li> <li>TTL (Time To Live): DNS-Eintr\u00e4ge haben eine TTL, die bestimmt, wie lange ein DNS-Eintrag gecached werden darf. DynDNS setzt oft eine relativ kurze TTL (z.B. 300 Sekunden), um sicherzustellen, dass \u00c4nderungen schnell wirksam werden.</li> </ul>"},{"location":"dns/glossar/dyndns/#handling-von-anfragen","title":"Handling von Anfragen","text":"<ul> <li>Lastverteilung (Load Balancing): DynDNS-Dienste nutzen Lastverteilung, um eingehende Anfragen auf mehrere Server zu verteilen, was die Last auf einzelne Server reduziert.</li> <li>Caching: DNS-Server und ISPs cachen DNS-Eintr\u00e4ge f\u00fcr die Dauer der TTL, was die Anzahl der Anfragen an den DynDNS-Dienst reduziert.</li> <li>Rate Limiting: Einige Dienste implementieren Rate Limiting, um die Anzahl der Updates von einzelnen Clients zu begrenzen und Missbrauch zu verhindern.</li> </ul>"},{"location":"dns/glossar/dyndns/#beispiel","title":"Beispiel","text":"<p>DynDNS (DDNS) ist sehr n\u00fctzlich, wenn man von seinem ISP keine Statische Public IP erh\u00e4lt, aber trotzdem Dienste in einem lokalen Netzwerk ver\u00f6ffentlichen m\u00f6chte. In unserer geteilten Umgebung (Wyler, Oberle, Chio, Hurley) verwenden wir den DynDNS von Swisscom. </p> <p>So k\u00f6nnen wir mittels Cloudflare Zero Trust unsere Dienste verwalten und wenn n\u00f6tig ver\u00f6ffentlichen.</p>"},{"location":"dns/glossar/primsec/","title":"Primary-Secondary-Konzept","text":""},{"location":"dns/glossar/primsec/#primary-secondary-konzept","title":"Primary / Secondary Konzept","text":"<ul> <li> Recherchieren Sie \u00fcber die Anf\u00e4nge des Internets und setzen Sie die Primary / Secondary DNS-Infrastruktur in den Zusammenhang des redundanten dezentralen Konzepts.</li> </ul> <p>Wie Mario und Luigi, hat man Primary (master) und Secondary (slave) DNS-Server. Die Hauptaufgabe des sekund\u00e4ren DNS ist die Redundanz, falls der prim\u00e4re ausf\u00e4llt. Somit vermeidet man einen Single point of failure und man kann den Load aufteilen. F\u00fcr den slave werden read-only kopien der Zonendateien eingesetzt und alle information erhaltet er direkt von dem prim\u00e4ren DNS-Server.</p>"},{"location":"dns/glossar/rectypes/","title":"Record-Typen","text":""},{"location":"dns/glossar/rectypes/#record-typen","title":"Record-Typen","text":"<ul> <li> Recherchieren Sie verschiedene Record-Typen und erkl\u00e4ren Sie diese.</li> </ul> Record Beschreibung Beispiel A Das \"A\" steht f\u00fcr Adresse. Dies ist der fundamentalste Bestandteil des DNS, denn er verbindet Domainnamen mit IP-Adressen. <code>www IN A 192.168.1.4</code> AAAA Gleich wie A, aber mit IPv6. <code>www IN AAAA 2607:f8b0:400a:800::200e</code> CNAME Canonical Name record. CNAME Records k\u00f6nnen einem Dom\u00e4nen-Namen einen weiteren Namen zuweisen. Er wird oft daf\u00fcr verwendet, Subdom\u00e4nen wie www oder mail, der Dom\u00e4ne, die den Inhalt hostet zuzuordnen. <code>www.sephley.local CNAME www.sephley.com</code> Alias Wie ein CNAME record, k\u00f6nnen Alias Records einem Dom\u00e4nen-Namen einen weiteren Namen zuweisen. Allerdings k\u00f6nnen Aliases bestehen, auch wenn bereits ein Record mit demselben Namen existiert. <code>@ IN ALIAS sephley.local.</code> MX Mail Exchange Record. Sie leiten Mails an die dazugeh\u00f6rigen Server weiter und werden auch zur Priorisierung verwendet <code>sephley.local. IN MX 10 mail.sephley.local.</code> NS NS steht f\u00fcr \u00abName Server\u00bb. Er entscheidet, welcher DNS-Server massgeblich ist. <code>@ IN NS primary.sephley.local.</code> PTR PTR steht f\u00fcr \u00abPointer\u00bb und macht das Gegenteil des A Records. Er kann IP-Adressen in Domain Namen verwandeln, was bedeutet das er in der Reverse-Zone verwendet wird. <code>2 IN PTR primary.sephley.local</code>"},{"location":"dns/glossar/zonefile/","title":"Zonendatei","text":""},{"location":"dns/glossar/zonefile/#zonendatei","title":"Zonendatei","text":"<ul> <li> Erkl\u00e4ren Sie die Zonendatei inkl. allen Parametern im SOA.</li> </ul> <p>Die Zonendatei enth\u00e4lt die gesamte Hierarchie der Zone inklusive allen Records. Eine Zonendatei startet immer mit einem SOA record, wo alle wichtigen Infos zur Zone stehen (z.B. Kontakt zum Zonenadmin).</p> <p>Hier sind die Parameter eines SOA-Eintrags und deren Bedeutung:</p>"},{"location":"dns/glossar/zonefile/#primary-name-server-mname","title":"Primary Name Server (MNAME)","text":"<p>Dies ist der vollqualifizierte Domainname (FQDN) des prim\u00e4ren Nameservers f\u00fcr die Zone. Er ist der erste Server, der autoritative Antworten f\u00fcr die Zone liefert.</p>"},{"location":"dns/glossar/zonefile/#responsible-person-rname","title":"Responsible Person (RNAME)","text":"<p>Dies ist die E-Mail-Adresse der Person, die f\u00fcr die Verwaltung der Zone verantwortlich ist. Das \"@\"-Zeichen wird durch einen Punkt (\".\") ersetzt. Zum Beispiel, \"admin.example.com\" bedeutet \"admin@example.com\".</p>"},{"location":"dns/glossar/zonefile/#serial-number","title":"Serial Number","text":"<p>Eine fortlaufende Nummer, die bei jeder \u00c4nderung der Zonendatei erh\u00f6ht wird. Dies hilft sekund\u00e4ren Nameservern zu erkennen, wann die Zonendatei aktualisiert wurde, sodass sie ihre Kopien entsprechend aktualisieren k\u00f6nnen.</p>"},{"location":"dns/glossar/zonefile/#refresh-interval","title":"Refresh Interval","text":"<p>Die Zeit in Sekunden, nach der sekund\u00e4re Nameserver \u00fcberpr\u00fcfen sollen, ob die Zonendatei auf dem prim\u00e4ren Nameserver aktualisiert wurde. Typischerweise ein Wert zwischen 1 Stunde (3600 Sekunden) und 1 Tag (86400 Sekunden).</p>"},{"location":"dns/glossar/zonefile/#retry-interval","title":"Retry Interval","text":"<p>Die Zeit in Sekunden, die sekund\u00e4re Nameserver warten sollen, bevor sie nach einem fehlgeschlagenen Update-Versuch erneut versuchen, die Zonendatei zu aktualisieren. Dieser Wert ist normalerweise k\u00fcrzer als das Refresh-Intervall.</p>"},{"location":"dns/glossar/zonefile/#expire-time","title":"Expire Time","text":"<p>Die maximale Zeit in Sekunden, die ein sekund\u00e4rer Nameserver die Zonendatei als g\u00fcltig betrachten soll, wenn keine Aktualisierung vom prim\u00e4ren Server erfolgt. Nach dieser Zeit wird die Zonendatei als ung\u00fcltig betrachtet, und der Server stellt die Beantwortung von Anfragen f\u00fcr diese Zone ein. Typischerweise ein Wert von mehreren Wochen.</p>"},{"location":"dns/glossar/zonefile/#minimum-ttl-time-to-live","title":"Minimum TTL (Time To Live)","text":"<p>Die Standardzeit in Sekunden, die DNS-Eintr\u00e4ge aus dieser Zone im Cache eines Clients oder eines zwischengeschalteten Nameservers verbleiben sollen. Wenn kein spezifischer TTL-Wert f\u00fcr einen Eintrag festgelegt ist, wird dieser Wert verwendet.</p>"},{"location":"dns/praktisch/","title":"Aufgaben","text":""},{"location":"dns/praktisch/#aufgaben","title":"Aufgaben","text":"<ul> <li> = fertig</li> <li> = WIP</li> </ul> <p>Checkliste der Auftr\u00e4ge gem\u00e4ss Olat:</p> <ul> <li> Als Pflichtprogramm wird die Inbetriebnahme eines DNS-Resolvers und Nameservers erwartet (bind unter Linux).<ul> <li> In Wireshark zeichnen Sie die rekursive Abfrage auf und erkl\u00e4ren diese.</li> <li> Erstellen Sie einen Secondary DNS und lassen Sie die Zonen automatisiert synchronisieren.</li> <li> In einem fr\u00fcheren Auftrag haben Sie exotische Betriebssysteme ans Netzwerk angebunden. Binden Sie Ihren DNS-Resolver ein und zeigen Sie per Wireshark, ob diese Betriebssysteme die Abfragen korrekt durchf\u00fchren.</li> <li> Versuchen Sie dynamisch DNS-Eintr\u00e4ge anpassen zu lassen. Spielen Sie Kapitel 3 von https://strugglers.net/~andy/blog/2018/03/19/ nach. Beachten Sie, dass sich die Welt \u00e4ndert: Nutzen Sie tsig-keygen statt dnssec-keygen.</li> <li> Unter maas.bbw-it.ch haben Sie Zugriff auf eine \u00abpers\u00f6nliche\u00bb DNS-Subdomain. Nutzen Sie diese M\u00f6glichkeit und testen Sie, wie sie diese einsetzen k\u00f6nnen. F\u00fcr Fortgeschrittene k\u00f6nnen Sie auch die dynamische Anpassung ausprobieren.</li> <li> \u00dcbersteuern Sie den DNS mittels Hosts-File (auch unter Windows). Wie verh\u00e4lt sich der Resolver, wenn Sie ihm per Hosts-File andere Werte unterjubeln? Werden diese da ber\u00fccksichtigt?</li> </ul> </li> </ul>"},{"location":"dns/praktisch/#netzwerkschema","title":"Netzwerkschema","text":"<p>Ich \u00fcbernehme das Netzwerk vom letzten Auftrag zu PXE und DHCP. Einerseits weil es praktisch ist, andererseits weil es eine gute \u00dcbung f\u00fcr mich ist. </p>"},{"location":"dns/praktisch/bind9/","title":"Bind9","text":""},{"location":"dns/praktisch/bind9/#bind9","title":"Bind9","text":"<ul> <li> Als Pflichtprogramm wird die Inbetriebnahme eines DNS-Resolvers und Nameservers erwartet (bind unter Linux).</li> </ul> <p>Bind9 ist eine Open-Source Implementation von DNS.</p>"},{"location":"dns/praktisch/bind9/#setup","title":"Setup","text":"<p>Wie folgt habe Bind9 installiert, konfiguriert und in meine Umgebung integriert.</p> <ul> <li>LAN: 192.168.1.0/26  </li> <li>DNS server: 192.168.1.7  </li> <li>Client: 192.168.1.4  </li> <li>Domain: sephley.local  </li> </ul>"},{"location":"dns/praktisch/bind9/#1-apt-pakete-installieren","title":"1. APT Pakete installieren","text":"<pre><code>sudo apt update\nsudo apt install bind9 bind9utils bind9-doc dnsutils\n</code></pre>"},{"location":"dns/praktisch/bind9/#2-konfiguration-vornehmen","title":"2. Konfiguration vornehmen","text":"<p>Die config-files f\u00fcr Bind9 befinden findet man unter <code>/etc/bind</code>. Zuerst bearbeiten wir die Datei <code>named.conf.options</code>. Vieles ist hier schon ausgef\u00fcllt, ich habe bloss den DNS zu dem von Cloudflare umkonfiguriert und das Netzwerk angepasst.</p> <pre><code>acl internal-network {\n192.168.1.0/26;\n};\noptions {\n        directory \"/var/cache/bind\";\n        allow-query { localhost; internal-network; };\n        allow-transfer { localhost; };\n        forwarders { 1.1.1.1; };\n        recursion yes;\n        dnssec-validation auto;\n};\n</code></pre> <p>Als n\u00e4chstes bearbeiten wir die Datei <code>named.conf.local</code></p> <pre><code>zone \"sephley.local\" IN {\n        type master;\n        file \"/etc/bind/forward.sephley.local\";\n        allow-update { none; };\n};\nzone \"1.168.192.in-addr.arpa\" IN {\n        type master;\n        file \"/etc/bind/reverse.sephley.local\";\n        allow-update { none; };\n};\n</code></pre> <p>Nun schreiben wir endlich unser zone file. Dazugeh\u00f6rige Theorie: Zonendatei Um uns diese Arbeit zu erleichtern, kopieren wir den Inhalt von <code>db.local</code> in unsere neues zone file <code>forward.sephley.local</code></p> <pre><code>cp db.local forward.sephley.local\n</code></pre> <p>Anschliessend f\u00fcgen wir folgendes in <code>forward.sephley.local</code> ein:</p> <pre><code>$TTL    604800\n@       IN      SOA     primary.sephley.local. root.primary.sephley.local. (\n                              2         ; Serial\n                         604800         ; Refresh\n                          86400         ; Retry\n                        2419200         ; Expire\n                         604800 )       ; Negative Cache TTL\n;\n@       IN      NS      primary.sephley.local.\nprimary IN      A       192.168.1.7\nwww     IN      A       192.168.1.4\n</code></pre> <p>Dazugeh\u00f6rige Theorie: Record-Typen Nun konfigurieren wie die Reverse Zone. Wie vorhin kopieren wir eine bestehende Datei als Vorlage:</p> <pre><code>cp db.127 reverse.sephley.local\n</code></pre> <p>Anschliessend f\u00fcgen wir folgendes in <code>reverse.sephley.local</code> ein:</p> <pre><code>$TTL    604800\n@       IN      SOA     sephley.local. root.sephley.local. (\n                              1         ; Serial\n                         604800         ; Refresh\n                          86400         ; Retry\n                        2419200         ; Expire\n                         604800 )       ; Negative Cache TTL\n;\n@       IN      NS      primary.sephley.local.\nprimary IN      A       192.168.1.7\n\n7       IN      PTR     primary.sephley.local.\n4       IN      PTR     www.sephley.local.\n</code></pre> <p>Als n\u00e4chstes f\u00fcgen wir folgende Zeile in <code>/etc/default/named</code> ein, um beim Aufstarten von Bind9 IPv4 zu erzwingen.</p> <pre><code>OPTIONS=\"-u bind -4\"\n</code></pre>"},{"location":"dns/praktisch/bind9/#3-systemd","title":"3. Systemd","text":"<p>Nun k\u00f6nnen wir den Dienst aktivieren und starten:</p> <pre><code>sudo systemctl start named\nsudo systemctl enable named\n</code></pre>"},{"location":"dns/praktisch/bind9/#4-funktionalitat-testen","title":"4. Funktionalit\u00e4t testen","text":"<p>Zuerst validieren wir den Syntax unser Konfig-Dateien:</p> <pre><code>sudo named-checkconf /etc/bind/named.conf.local\n</code></pre> <p>Wenn nichts ausgegeben wird, dann stimmt diese Konfig.  Als n\u00e4chstes pr\u00fcfen wir die Forward &amp; Reverse Zone:</p> <pre><code>sudo named-checkzone sephley.local /etc/bind/forward.sephley.local\nsudo named-checkzone sephley.local /etc/bind/reverse.sephley.local\n</code></pre> <p>Wenn man hier ein <code>OK</code> erhaltet dann stimmen die Konfigs. Nun wechseln wir auf einen Client im selben Netzwerk und setzen den DNS zu <code>192.168.1.7</code>: <code>sudo vim /etc/netplan/00-installer-config.yaml</code> bearbeiten:</p> <pre><code>network:\n  ethernets:\n    ens33:\n      dhcp4: true\n      nameservers:\n        addresses: [192.168.1.7]\n  version: 2\n</code></pre> <p>Nun f\u00fchren wir auf einem Client im selben Netzwerk folgenden Befehl aus:</p> <pre><code>dig primary.sephley.local\n</code></pre> <p>dig syntax &amp; usage</p> <p>Output: </p>"},{"location":"dns/praktisch/bind9/#probleme-anmerkungen","title":"Probleme / Anmerkungen","text":"<ul> <li>Zuerst wollte ich den Bind9 mit der Anleitung von Digitalocean aufsetzen, diese war jedoch overkill f\u00fcr meine Umgebung. Aber welche Anleitung sollte ich denn nehmen? </li> <li>Meine lokale VMware Umgebung ist sehr langsam. Vielleicht sollte ich sie migrieren. Ich glaube ich verwende ab nun Terraform &amp; Packer, um meine VMs zu erstellen.</li> <li><code>network unreachable resolving './DNSKEY/IN': 2001:dc3::35#53</code> Viele solche Meldungen wurden mir bei <code>systemctl status named</code> angezeigt. Dies ist, weil ich noch IPv6 aktiviert hatte, was ich in meiner Konfig nicht mit-einbezogen habe.</li> <li>Gem\u00e4ss Anleitung von Linuxtechi wollte ich den DNS statisch konfigurieren, um die Funktionalit\u00e4t meines DNS zu testen. Da stand ich sollte <code>/etc/resolv.conf</code> bearbeiten, doch das Erste, was in dieser Datei stand, war:</li> </ul> <pre><code># This is /run/systemd/resolve/stub-resolv.conf managed by man:systemd-resolved(8).\n# Do not edit.\n#\n# This file might be symlinked as /etc/resolv.conf. If you're looking at\n# /etc/resolv.conf and seeing this text, you have followed the symlink.\n#\n# This is a dynamic resolv.conf file for connecting local clients to the\n# internal DNS stub resolver of systemd-resolved. This file lists all\n# configured search domains.\n</code></pre> <p>Die Datei war also nur ein Symlink. Ich habe herausgefunden, dass man es theoretisch \u00fcberschreiben kann mit einem statischen File, aber dass es nicht empfohlen wird. Ich habe dann im <code>/etc/netplan/00-installer-config.yaml</code> den Nameserver angegeben.</p>"},{"location":"dns/praktisch/dnsaws/","title":"DNS-in-AWS","text":""},{"location":"dns/praktisch/dnsaws/#dns-in-aws","title":"DNS in AWS","text":"<ul> <li> Auch in der AWS oder Azure-Umgebung finden Sie DNS. Was l\u00e4sst sich damit anstellen?</li> </ul> <p>AWS garantiert eine 100% uptime, was f\u00fcr ein so kritischer Dienst wie der DNS sehr von Vorteil ist. Der DNS in AWS ist unter Route 53 zu finden.</p>"},{"location":"dns/praktisch/dnsaws/#probleme-anmerkungen","title":"Probleme / Anmerkungen","text":"<p>Um dies zu testen, wollte ich das Learnerlab verwenden, doch ich verf\u00fcgte nicht \u00fcber ausreichende Berechtigungen. </p>"},{"location":"dns/praktisch/pers_subdomain/","title":"Pers\u00f6nliche-Subdomain","text":""},{"location":"dns/praktisch/pers_subdomain/#personliche-subdomain","title":"Pers\u00f6nliche Subdomain","text":"<ul> <li> Unter maas.bbw-it.ch haben Sie Zugriff auf eine \u00abpers\u00f6nliche\u00bb DNS-Subdomain. Nutzen Sie diese M\u00f6glichkeit und testen Sie, wie sie diese einsetzen k\u00f6nnen. F\u00fcr Fortgeschrittene k\u00f6nnen Sie auch die dynamische Anpassung ausprobieren.</li> </ul> <p>Auf dem Maas der BBW hat man eine pers\u00f6nliche Subdomain mit der M\u00f6glichkeit, seine eigene Zone zu konfigurieren. </p> <p>Somit k\u00f6nnen wir eine dynamische Anpassung einrichten. Zuerst kopieren wir unseren TSIG Schl\u00fcssel und f\u00fcgen es in die Datei <code>/secrets/maas</code> ein.</p> <p>Dann setzen wir die erforderlichen Berechtigungen:  </p> <pre><code>sudo chown root:root /secrets/maas\nsudo chmod 600 /secrets/maas\n</code></pre> <p>Nun k\u00f6nnen wir unseren Key hinzuf\u00fcgen:  </p> <pre><code>nsupdate -k /secrets/maas \n&gt;server ns.users.bbw-it.ch. \n&gt;update add xyz.joseph.hurley.users.bbw-it.ch. 300 IN A 1.2.3.4 \n&gt;send\n&gt;quit\n</code></pre> <p>Und zum Schluss noch die \u00c4nderungen \u00fcberpr\u00fcfen:  </p> <pre><code>nslookup xyz.joseph.hurley.users.bbw-it.ch\nnslookup xyz.joseph.hurley.users.bbw-it.ch ns.users.bbw-it.ch\n</code></pre>"},{"location":"dns/praktisch/pers_subdomain/#probleme-anmerkungen","title":"Probleme / Anmerkungen","text":"<p>Ich erhalte bei dem <code>send</code> Befehl folgende Fehlermeldung: \"TSIG error with server: tsig indicates error update failed: NOTAUTH(BADKEY)\".</p> <p>Wenn ich den key einlesen m\u00f6chte, kann er nicht gelesen werden.</p> <p></p> <p>Ich habe eine Stunde lang mit den Berechtigungen herumgespielt und diverse Forum posts durchgelesen, konnte aber keine L\u00f6sung finden.</p>"},{"location":"dns/praktisch/secdns/","title":"Secondary-DNS","text":""},{"location":"dns/praktisch/secdns/#secondary-dns","title":"Secondary DNS","text":"<ul> <li> Erstellen Sie einen Secondary DNS und lassen Sie die Zonen automatisiert synchronisieren.</li> </ul> <p>Dazugeh\u00f6rige Theorie: Primary / Secondary Konzept F\u00fcr den Secondary DNS erstellen wir nochmals eine Ubuntu-Server VM. Diesmal habe ich eine Ubuntu 24.04 (Noble Numbat) VM erstellt, denn so kann ich die neue Version testen sowie auch die R\u00fcckw\u00e4rtskompatibilit\u00e4t pr\u00fcfen.</p>"},{"location":"dns/praktisch/secdns/#1-apt-pakete-installieren","title":"1. APT Pakete installieren","text":"<pre><code>sudo apt update\nsudo apt install bind9 bind9utils bind9-doc dnsutils\n</code></pre>"},{"location":"dns/praktisch/secdns/#2-konfiguration-vornehmen","title":"2. Konfiguration vornehmen","text":"<p>Zuerst m\u00fcssen wir noch auf unserem prim\u00e4ren DNS die folgenden parameter in <code>/etc/bind/named.conf.local</code> in beiden <code>zone</code> blocks einf\u00fcgen:</p> <pre><code>allow-transfer { 192.168.1.9 };\nalso-notify { 192.168.1.9 };\n</code></pre> <p><code>/etc/bind/named.conf.local</code> wie folgt bearbeiten:  </p> <pre><code>zone \"sephley.local\" {\ntype slave;\nfile \"/etc/bind/forward.sephley.local\";\nmasters { 192.168.1.7; };\n};\n</code></pre> <p>Anschliessend laden wir den Dienst neu:  </p> <pre><code>sudo systemctl reload named\n</code></pre>"},{"location":"dns/praktisch/secdns/#probleme-anmerkungen","title":"Probleme / Anmerkungen","text":"<p>Keine. Die schnellen boot-Zeiten von Ubuntu-Noble gefallen mir sehr. Good job Canonical!</p>"},{"location":"dns/praktisch/uebersteuern/","title":"DNS-\u00fcbersteuern","text":""},{"location":"dns/praktisch/uebersteuern/#dns-ubersteuren","title":"DNS \u00fcbersteuren","text":"<ul> <li> \u00dcbersteuern Sie den DNS mittels Hosts-File (auch unter Windows). Wie verh\u00e4lt sich der Resolver, wenn Sie ihm per Hosts-File andere Werte unterjubeln? Werden diese da ber\u00fccksichtigt?</li> </ul>"},{"location":"dns/praktisch/uebersteuern/#linux","title":"Linux","text":"<p>Pfad: <code>/etc/hosts</code> </p> <p>Ich habe die Zeile <code>0.0.0.0 www.facebook.com</code> eingef\u00fcgt, um Facebook zu blocken. </p>"},{"location":"dns/praktisch/uebersteuern/#windows","title":"Windows","text":"<p>Pfad: <code>C:\\Windows\\system32\\drivers\\etc\\hosts</code></p> <p>Wie vorhin, habe ich die Zeile <code>0.0.0.0 www.facebook.com</code> eingef\u00fcgt, um Facebook zu blocken. Anschliessend musste ich in Microsoft Edge folgende Einstellung ausschalten: </p> <p>Somit h\u00f6rt der Browser auf das lokale Hosts-File.</p>"},{"location":"dns/praktisch/uebersteuern/#probleme-anmerkungen","title":"Probleme / Anmerkungen","text":"<p>Wir stellen also Fest, dass die Werte im Hosts file priorisiert werden. Als ich aber auf Windows im hosts file www.facebook.com geblockt habe und trotzdem mit dem Browser darauf zugreifen konnte war ich sehr verwirrt. Diese Quelle hat mich darauf aufmerksam gemacht, dass die meisten Browser eine Funktion namens \"DNS over HTTPS\" verwenden. \"When DNS over HTTPS is enabled in a browser, the browser bypasses the normal DNS client in Windows 10 and 11.\"</p>"},{"location":"dns/praktisch/wireshark/","title":"Wireshark","text":""},{"location":"dns/praktisch/wireshark/#wireshark","title":"Wireshark","text":"<ul> <li> In Wireshark zeichnen Sie die rekursive Abfrage auf und erkl\u00e4ren diese.</li> <li> In einem fr\u00fcheren Auftrag haben Sie exotische Betriebssysteme ans Netzwerk angebunden. Binden Sie Ihren DNS-Resolver ein und zeigen Sie per Wireshark, ob diese Betriebssysteme die Abfragen korrekt durchf\u00fchren.</li> </ul> <p>Ich habe meinen ehemaligen DHCP Client verwendet, wo Wireshark schon installiert war.</p>"},{"location":"dns/praktisch/wireshark/#windows","title":"Windows","text":"<p>Ich habe einen Scan gestartet und nach <code>dns</code> gefiltert. W\u00e4hrend dem Scan habe ich Microsoft Edge ge\u00f6ffnet und olat.bbw.ch aufgel\u00f6st.</p> <p> Datei herunterladen</p> <ol> <li> <p>Start bei dem Resolver: Der Client sendet eine DNS-Abfrage an den DNS-Resolver.  </p> </li> <li> <p>DNS Server erhaltet die Anfrage: Der Resolver fragt einen der Root-Nameserver an.</p> </li> <li> <p>Weiterleitung an die TLD-Nameserver: Der Root-Nameserver antwortet mit einem Verweis auf die TLD-Nameserver, die f\u00fcr die Dom\u00e4ne zust\u00e4ndig sind.</p> </li> <li> <p>Anfrage an die autoritativen Nameserver: Der TLD-Nameserver antwortet mit den autoritativen Nameservern f\u00fcr primary.sephley.local. Der Resolver schickt dann eine Anfrage an einen dieser autoritativen Nameserver.</p> </li> <li> <p>Erhalt der endg\u00fcltigen Antwort: Der autoritative Nameserver (primary.sephley.local) antwortet mit der IP-Adresse der Dom\u00e4ne. Diese Antwort wird an den Resolver zur\u00fcckgegeben.</p> </li> <li> <p>\u00dcbermittlung an den Client: Der Resolver sendet die erhaltene IP-Adresse an den urspr\u00fcnglichen Client zur\u00fcck, der die Anfrage gestellt hat.</p> </li> <li> <p>Caching der Antwort: Sowohl der Resolver als auch der Client speichern die Antwort im Cache, um bei zuk\u00fcnftigen Anfragen schneller antworten zu k\u00f6nnen.</p> </li> </ol>"},{"location":"dns/praktisch/wireshark/#probleme-anmerkungen","title":"Probleme / Anmerkungen","text":"<p>Ich habe irgendwie den Sinn der Aufgabe nicht begriffen und habe die rekursive Anfrage an olat.bbw.ch gemacht. Aber der Sinn und Zweck dieser Aufgabe ist ja, dass ich die Anfrage an meinen eigenen DNS mache... Dazu habe ich zuerst eine bereits gecachte Abfrage auf www.google.ch gemacht, was nat\u00fcrlich nichts n\u00fctzt, wenn man den ganzen Prozess erkl\u00e4ren m\u00f6chte.</p> <p> Datei herunterladen</p> <p>Falls Sie sich fragen, was gstatic.com ist: Google l\u00e4dt static content (Javascripts, Bilder, CSS) von einer anderen Dom\u00e4ne. Dies hilft bei der Ladezeit, da es die Bandbreite verringert. </p>"},{"location":"tls/","title":"Auftrag Transport Layer Security TLS M300","text":""},{"location":"tls/#auftrag-transport-layer-security-tls-m300","title":"Auftrag Transport Layer Security TLS M300","text":"<p>Link zum Auftrag</p> <p> </p>"},{"location":"tls/aufgaben/","title":"Aufgaben von Olat","text":""},{"location":"tls/aufgaben/#aufgaben-von-olat","title":"Aufgaben von Olat","text":"<ul> <li> = fertig</li> <li> = WIP</li> </ul> <p>Checkliste der Aufgaben gem\u00e4ss Olat:</p> <ul> <li> TLS Wireshark Analyse</li> <li> TLS im Web (HTTPS)</li> <li> Vergleichen Sie verschiedene HTTPS-Seiten (digitec, olat, Schweizer Bank Ihrer Wahl, Nischenbank z. B. garantibank.nl) auf ihren Sicherheitslevel.</li> </ul>"},{"location":"tls/aufgaben/nginx/","title":"Nginx","text":""},{"location":"tls/aufgaben/nginx/#nginx-mit-tls","title":"Nginx mit TLS","text":"<ul> <li> TLS im Web (HTTPS)</li> </ul> <p>Sie haben in der Vor\u00fcbung zwei zertifikatsbasierte Webzug\u00e4nge eingerichtet. Verwenden Sie diese f\u00fcr den Mitschnitt des HTTPS-Zugriffs. Finden Sie die Elemente der Theorie im Mitschnitt und ordnen Sie diese zu. Hier noch ein n\u00fctzlicher Link: https://www.sslshopper.com/article-most-common-openssl-commands.html Welche Verschl\u00fcsselung haben Sie verwendet? War Ihnen das bei der Erstellung bewusst? K\u00f6nnen Sie spezielle Protokollabl\u00e4ufe simulieren? Versuchen Sie einen Alert aufzuzeichnen.</p> <p>In diesem Abschnitt installiere ich Nginx und konfiguriere ein selbstsigniertes Zertifikat.</p>"},{"location":"tls/aufgaben/nginx/#installation","title":"Installation","text":"<p>Ubuntu 24.04</p> <pre><code>sudo apt install nginx\n</code></pre>"},{"location":"tls/aufgaben/nginx/#konfiguration","title":"Konfiguration","text":"<p>https://nginx.org/en/docs/http/configuring_https_servers.html</p> <p><code>/etc/nginx/sites-available/vogel.conf</code></p> <pre><code>server {\n        listen 80 default_server;\n        listen [::]:80 default_server;\n\n        # SSL configuration\n        listen 443 ssl default_server;\n        listen [::]:443 ssl default_server;\n        server_name www.sephley.home;\n        ssl_certificate www.sephley.home.crt;\n        ssl_certificate_key www.sephley.home.key;\n        ssl_protocols TLSv1.2 TLSv1.3;\n        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;\n\n        root /var/www/html;\n\n        # Add index.php to the list if you are using PHP\n        index index.html index.htm index.nginx-debian.html;\n\n\n        location / {\n                # First attempt to serve request as file, then\n                # as directory, then fall back to displaying a 404.\n                try_files $uri $uri/ =404;\n        }\n}\n</code></pre>"},{"location":"tls/aufgaben/nginx/#self-signed-cert-generieren","title":"Self-signed cert generieren","text":"<pre><code>openssl genrsa -out www.sephley.com.key 2048 # private key generieren\nopenssl req -new -key www.sephley.com.key -out csr.pem # CSR generieren\nopenssl req -x509 -key www.sephley.com.key -in csr.pem -out www.sephley.home.crt -days 365 # Zertifikat ausstellen\n</code></pre> <p>Um unserer CA mit Firefox zu vertrauen, m\u00fcssen wir es in den Zertifikats-Einstellungen importieren:</p> <p></p>"},{"location":"tls/aufgaben/nginx/#reflexion","title":"Reflexion","text":"<p>Da ich dies schon mehrmals machen musste, war mir der Ablauf schon bekannt.</p> <p>Als ich dies originell aufgesetzt habe, habe ich die Ciphers nicht beachtet. Ich habe jedoch bei dem Vergleich mit anderen Dom\u00e4nen gemerkt, dass dies sinnvoll w\u00e4re. Deshalb habe ich <code>ssl_ciphers TLS_AES_256_GCM_SHA384;</code> in der config spezifiziert.</p> <p>ACHTUNG! Die Cipher <code>TLS_AES_256_GCM_SHA384</code> hat nicht funktioniert, weil es von nginx nicht erkannt wird. Es ist aber eine valide Cipher, dies habe ich wie folgt gepr\u00fcft:</p> <p></p> <p>Mit dem Befehl oben pr\u00fcfe ich die SSL Konfigurations Datei um zu sehen, ob die Cipher unterst\u00fctzt wird.</p> <p>Ich versuchte auch noch, TLS 1.3 zu erzwingen, dies hat aber nichts gen\u00fctzt.</p> <p>Ich habe es schlussendlich gel\u00f6st, indem ich auf die empfohlenen Ciphers von Mozilla gewechselt habe:</p> <pre><code>ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;\n</code></pre>"},{"location":"tls/aufgaben/vergleich/","title":"Vergleich-nach-Sicherheitslevel","text":""},{"location":"tls/aufgaben/vergleich/#vergleich-von-verschiedenen-https-seiten","title":"Vergleich von verschiedenen HTTPS-Seiten","text":"<ul> <li> Vergleichen Sie verschiedene HTTPS-Seiten (digitec, olat, Schweizer Bank Ihrer Wahl, Nischenbank z. B. garantibank.nl) auf ihren Sicherheitslevel.</li> </ul>"},{"location":"tls/aufgaben/vergleich/#vergleich","title":"Vergleich","text":"<p>F\u00fcr jeden der folgenden Dom\u00e4nen habe ich den \"SSL Server Test\" von SSL Labs ausgef\u00fchrt. Wie funktioniert die Auswertung?</p> URL Unterst\u00fctzte TLS Versionen SSL Labs Auswertung https://www.digitec.ch 1.2 - 1.3 A+ https://olat.bbw.ch 1.2 - 1.3 A+ https://garantibank.nl 1.2 - 1.3 A+ -- -- -- https://sephley.github.io/docs 1.2 - 1.3 A https://www.sephley.com(ohne spezifizierte Ciphers) 1.2 - 1.3 T (A wenn es trusted w\u00e4re) https://www.sephley.com(mit spezifizierten Ciphers) 1.2 - 1.3 T (A wenn es trusted w\u00e4re)"},{"location":"tls/aufgaben/vergleich/#reflexion","title":"Reflexion","text":"<p>Was bei meinen Webseiten zum A anstatt A+ gef\u00fchrt hat sind warscheinlich die Ciphers. Beispielsweise ist mir aufgefallen, das mein selbst-signiertes Zertifikat https://www.sephley.com schw\u00e4chere Ciphers unterst\u00fctzt als https://olat.bbw.ch.</p> <p>https://olat.bbw.ch</p> <p></p> <p>https://www.sephley.com</p> <p></p> <p>Bei der Erstellung des private keys habe ich nicht darauf geachtet, welche Ciphers ich verwende. Falsch, das spezifiziert man nicht bei der Erstellung des private keys sondern bei dem Webserver. in meinem Fall musste ich also meine Nginx config anpassen:</p> <pre><code>ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;\n</code></pre> <p>Danach sah das Resultat besser aus:</p> <p>https://www.sephley.com</p> <p></p> <p>Allerdings war der Score von SSL Labs immer noch bei A, also war es nicht die Schuld der Ciphers.</p>"},{"location":"tls/aufgaben/wireshark/","title":"Wireshark","text":""},{"location":"tls/aufgaben/wireshark/#wireshark-sniffing","title":"Wireshark Sniffing","text":"<ul> <li> TLS Wireshark Analyse</li> </ul> <p>TLS ist auch dazu da, den Verkehr vor neugierigen Blicken zu verheimlichen. Doch zu Debugging-Zwecke w\u00e4re es oft hilfreich, den Traffic trotzdem mittels Wireshark mith\u00f6ren zu k\u00f6nnen. Und tats\u00e4chlich l\u00e4sst sich dies bewerkstelligen, wenn man Einfluss auf eine der Seiten hat. Nat\u00fcrlich wollen Sie das durchf\u00fchren und erforschen. Sie finden alles Wichtige dazu hier: https://wiki.wireshark.org/TLS Tipp: Sie m\u00fcssen dem TLS Stream folgen. Und da lohnt es sich oft, den Hex Dump anzuzeigen. Insbesondere bei der Nutzung bin\u00e4rer Daten. Auch ein Blick ins Hex Dump Feld und dessen Reiter ist lohnend!</p> <p>tls capture download</p> <p>Wenn wir in dieser Datei nach <code>ssl</code> filtern, wird der Handshake klar ersichtlich.</p> <p></p> <p>1. Client Hello Mein Client initiiert den Verbindungsaufbau. Die Nachricht enth\u00e4lt Informationen wie die unterst\u00fctzten Cipher Suites und ein Secret, welcher im Schl\u00fcsselaustausch verwendet wird.</p> <p>2. Server Hello Diese Nachricht enth\u00e4lt die vom Server gew\u00e4hlte Verschl\u00fcsselungsmethode und eine weiteres Secret.</p> <p>3. Change Cipher Spec Der Server teilt dem Client mit, dass die zuk\u00fcnftigen Nachrichten mit den neu ausgehandelten Verschl\u00fcsselungseinstellungen verschl\u00fcsselt werden.</p> <p>4. Application Data Daten werden verschl\u00fcsselt ausgetauscht.</p> <p>Man sieht auch, dass die Daten verschl\u00fcsselt wurden.</p> <p></p> <p>https://wiki.wireshark.org/TLS</p>"},{"location":"tls/glossar/","title":"Glossar","text":""},{"location":"tls/glossar/#glossar","title":"Glossar","text":"<ul> <li> = fertig</li> <li> = WIP</li> </ul> <p>Checkliste der Recherche gem\u00e4ss Olat:</p> <ul> <li> Verschaffen Sie sich einen \u00dcberblick \u00fcber die Architektur des Protokolls.</li> <li> Wer setzt TLS ein? Sehen Sie noch speziellere Anwendungsf\u00e4lle insbesondere f\u00fcr 2-Way-Authentification.</li> <li> W\u00e4hlen Sie eine der Angriffsm\u00f6glichkeiten aus und beschreiben Sie den Angriff und die Abwehrmechanismen von TLS detailliert.</li> <li> Welche Verschl\u00fcsselungsverfahren k\u00f6nnen mit TLS eingesetzt werden?</li> <li> Lange bestand das Problem, dass pro HTTPS-Subdomain eine eigene IP-Adresse n\u00f6tig war. Warum und wie l\u00f6ste man das? Wie funktioniert SNI?</li> <li> Welche Nachteile erkennen Sie durch diese Erweiterung?</li> <li> Der englischsprachige Wikipedia-Artikel ist noch einiges umfangreicher. Welche Informationen finden Sie da zus\u00e4tzlich?</li> </ul>"},{"location":"tls/glossar/angriff-abwehr/","title":"Angriff-Abwehrmechanismus","text":""},{"location":"tls/glossar/angriff-abwehr/#angriff-abwehrmoglichkeiten","title":"Angriff / Abwehrm\u00f6glichkeiten","text":"<ul> <li> W\u00e4hlen Sie eine der Angriffsm\u00f6glichkeiten aus und beschreiben Sie den Angriff und die Abwehrmechanismen von TLS detailliert.</li> </ul> <p>Man-in-the-Middle ist eine bekannte Angriffsmethode, welche auf TLS betrifft.</p> <p>Wenn ein Angreifer sich zwischen zwei kommunizierenden Parteien plaziert und den Datenverkehr liest oder manipuliert. Um dies zu verhindern, sollte man mit Zertifikaten arbeiten (2-way-authentification).</p>"},{"location":"tls/glossar/architektur/","title":"Architektur","text":""},{"location":"tls/glossar/architektur/#architektur-des-protokolls","title":"Architektur des Protokolls","text":"<ul> <li> Verschaffen Sie sich einen \u00dcberblick \u00fcber die Architektur des Protokolls.</li> </ul> <p>https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/</p> <p>TLS (Transport Layer Security) besteht aus mehreren Schichten und Protokollen.</p>"},{"location":"tls/glossar/architektur/#record-protocol","title":"Record Protocol","text":"<p>Sorgt f\u00fcr die Vertraulichkeit und Integrit\u00e4t der \u00fcbertragenen Daten. Es zerteilt die Daten in Bl\u00f6cke, komprimiert sie optional, berechnet Authentifizierungscodes und verschl\u00fcsselt sie, bevor sie \u00fcber das Netzwerk gesendet werden.</p>"},{"location":"tls/glossar/architektur/#handshake-protocol-change-cipher-spec-protocol","title":"Handshake Protocol &amp; Change Cipher Spec Protocol","text":"<p>Erm\u00f6glicht die Authentifizierung der Kommunikationspartner und die Aushandlung kryptographischer Parameter. Das Change Cipher Spec Protocol signalisiert den \u00dcbergang von unverschl\u00fcsselter zu verschl\u00fcsselter Kommunikation. https://www.cloudflare.com/learning/ssl/what-happens-in-a-tls-handshake/</p> <p> Bild von Cloudflare</p>"},{"location":"tls/glossar/architektur/#alert-protocol","title":"Alert Protocol","text":"<p>\u00dcbermittelt Fehlermeldungen und Warnungen. Mittels einem \"Close Notify\" Alert sieht man, dass eine Partei die Verbindung sauber schliessen m\u00f6chte.</p>"},{"location":"tls/glossar/nachteile/","title":"Nachteile","text":""},{"location":"tls/glossar/nachteile/#nachteile-von-tls","title":"Nachteile von TLS","text":"<ul> <li> Welche Nachteile erkennen Sie durch diese Erweiterung?</li> </ul> <p>Meiner Meinung Nach ist es ein Nachteil, dass der Benutzer sich</p> <p>TLS-Verschl\u00fcsselung kann die Leistung beeintr\u00e4chtigen, da die Verschl\u00fcsselung und Entschl\u00fcsselung der Daten zus\u00e4tzliche Rechenleistung erfordert. </p>"},{"location":"tls/glossar/sni/","title":"SNI","text":""},{"location":"tls/glossar/sni/#sni","title":"SNI","text":"<ul> <li> Lange bestand das Problem, dass pro HTTPS-Subdomain eine eigene IP-Adresse n\u00f6tig war. Warum und wie l\u00f6ste man das? Wie funktioniert SNI?</li> </ul>"},{"location":"tls/glossar/sni/#problem","title":"Problem","text":"<p>In den fr\u00fchen Versionen des SSL/TLS-Protokolls wird die Anfrage des Clients an den Server ohne Hostinformationen gesendet. Das bedeutet, dass der Server nicht weiss, f\u00fcr welche Subdomain oder welchen Hostname die Anfrage bestimmt ist, da die Hostinformationen erst in der HTTP-Anfrage enthalten sind, die nach dem SSL/TLS-Handshake kommt. Ohne diese Information konnte der Server nicht das richtige Zertifikat ausw\u00e4hlen, wenn mehrere Subdomains auf derselben IP-Adresse gehostet wurden.</p>"},{"location":"tls/glossar/sni/#losung","title":"L\u00f6sung","text":"<p>Um dieses Problem zu l\u00f6sen haben die Entwickler des \"EdelKey project\" SNI (Server Name Indication) als Erweiterung von TLS 2003 ins Leben gerufen. Ich finde die Erkl\u00e4rung von Cloudflare sehr verst\u00e4ndlich: SNI is somewhat like mailing a package to an apartment building instead of to a house. When mailing something to someone's house, the street address alone is enough to get the package to the right person. But when a package goes to an apartment building, it needs the apartment number in addition to the street address; otherwise, the package might not go to the right person or might not be delivered at all.</p> <p>Technisch wird der Hostname in der ersten Nachricht des SSL/TLS-Handshakes gesendet. Dies erlabut es dem Server, das richtige Zertifikat f\u00fcr die angeforderte Subdomain auszuw\u00e4hlen.</p>"},{"location":"tls/glossar/use-cases/","title":"Anwendungsf\u00e4lle","text":""},{"location":"tls/glossar/use-cases/#spezielle-anwendungsfalle","title":"Spezielle Anwendungsf\u00e4lle","text":"<ul> <li> Wer setzt TLS ein? Sehen Sie noch speziellere Anwendungsf\u00e4lle insbesondere f\u00fcr 2-Way-Authentification.</li> </ul> <p>TLS kann f\u00fcr sehr vieles noch eingesetzt werden, es ist schlussendlich eine Verschlusselungsm\u00f6glichkeit. Durch die Implementierung von 2-Way-Authentification mit Zertifikaten k\u00f6nnen sowohl Clients als auch Server in verschiedenen Szenarien authentifiziert werden, was die Sicherheit und Vertrauensw\u00fcrdigkeit der Kommunikation weiter erh\u00f6ht.</p> <p>Unten ist noch eine Liste von anderen M\u00f6glichkeiten (von ChatGPT generiert).</p> <ol> <li> <p>E-Mail-Sicherheit</p> <p>SMTP, IMAP und POP3: TLS wird verwendet, um E-Mails w\u00e4hrend des Transports zu sichern. Zwei-Wege-Authentifizierung kann durch die Verwendung von Client-Zertifikaten erreicht werden, um sowohl den E-Mail-Server als auch den E-Mail-Client zu authentifizieren.</p> </li> <li> <p>VPNs (Virtual Private Networks)</p> <p>SSL/TLS-VPNs: Viele VPN-L\u00f6sungen, wie OpenVPN, verwenden TLS, um eine sichere Verbindung zwischen dem Client und dem VPN-Server herzustellen. Zwei-Wege-Authentifizierung kann durch die Verwendung von Zertifikaten sowohl auf dem Client als auch auf dem Server implementiert werden.</p> </li> <li> <p>Datei\u00fcbertragungsprotokolle</p> <p>FTPS: File Transfer Protocol Secure verwendet TLS, um Datei\u00fcbertragungen zu sichern. Client- und Server-Zertifikate k\u00f6nnen verwendet werden, um beide Seiten zu authentifizieren. SFTP (SSH File Transfer Protocol): Obwohl SFTP oft \u00fcber SSH verwendet wird, kann es auch \u00fcber TLS implementiert werden.</p> </li> <li> <p>Datenbankverbindungen</p> <p>Datenbank-Verbindungen: TLS kann verwendet werden, um die Verbindung zwischen einem Client und einer Datenbank zu sichern. Datenbanken wie MySQL, PostgreSQL und SQL Server unterst\u00fctzen TLS-Verbindungen mit Zwei-Wege-Authentifizierung durch die Verwendung von Client- und Server-Zertifikaten.</p> </li> <li> <p>Messaging-Dienste</p> <p>XMPP (Extensible Messaging and Presence Protocol): TLS wird verwendet, um sichere Nachrichten\u00fcbermittlung in XMPP-basierten Diensten wie Jabber zu gew\u00e4hrleisten. Zwei-Wege-Authentifizierung kann durch die Verwendung von Zertifikaten implementiert werden. MQTT (Message Queuing Telemetry Transport): MQTT, ein Protokoll f\u00fcr das Internet der Dinge (IoT), kann TLS verwenden, um die Kommunikation zwischen Ger\u00e4ten zu sichern. Zwei-Wege-Authentifizierung wird durch die Verwendung von Zertifikaten erreicht.</p> </li> <li> <p>Cloud-Dienste und APIs</p> <p>RESTful APIs: TLS wird h\u00e4ufig verwendet, um die Kommunikation zwischen Clients und RESTful APIs zu sichern. Zwei-Wege-Authentifizierung kann durch die Verwendung von Client-Zertifikaten implementiert werden. Cloud-Speicherdienste: Dienste wie AWS, Google Cloud und Microsoft Azure verwenden TLS, um die Daten\u00fcbertragung zu sichern. Zwei-Wege-Authentifizierung wird oft durch die Verwendung von Zertifikaten und API-Schl\u00fcsseln erreicht.</p> </li> <li> <p>IoT (Internet of Things)</p> <p>Ger\u00e4tekommunikation: TLS wird verwendet, um die Kommunikation zwischen IoT-Ger\u00e4ten und zentralen Servern zu sichern. Zwei-Wege-Authentifizierung kann durch die Implementierung von Zertifikaten auf beiden Seiten erreicht werden.</p> </li> </ol>"},{"location":"tls/glossar/verschluesslungsverfahren/","title":"Verschl\u00fcsslungsverfahren","text":""},{"location":"tls/glossar/verschluesslungsverfahren/#verschlusslungsverfahren","title":"Verschl\u00fcsslungsverfahren","text":"<ul> <li> Welche Verschl\u00fcsselungsverfahren k\u00f6nnen mit TLS eingesetzt werden?</li> </ul> <p>Es gibt eine Menge Verschl\u00fcsselungsverfahren welche mit TLS eingesetzt werden k\u00f6nnen, da es viele Prozesse gibt. Dempentsprechend hat man viele M\u00f6glichkeiten. Wenn man diese sich f\u00fcr jeden Bereich ein Verschl\u00fcsslungsverfahren aussucht, hat man eine \"Cipher Suite\".</p> <p> Bild von Microsoft</p> <p>Hier sind einige Beispiele f\u00fcr TLS Cipher Suites, die diese Algorithmen kombinieren:</p> Cipher Suite Beschreibung <code>TLS_AES_128_GCM_SHA256</code> Verwendet AES-128 im GCM-Modus f\u00fcr die Verschl\u00fcsselung und SHA-256 f\u00fcr die HMAC. <code>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</code> Verwendet ECDHE f\u00fcr den Schl\u00fcsselaustausch, RSA f\u00fcr die Authentifizierung, AES-128 im GCM-Modus f\u00fcr die Verschl\u00fcsselung und SHA-256 f\u00fcr die HMAC. <code>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</code> Verwendet ECDHE f\u00fcr den Schl\u00fcsselaustausch, ECDSA f\u00fcr die Authentifizierung, AES-256 im GCM-Modus f\u00fcr die Verschl\u00fcsselung und SHA-384 f\u00fcr die HMAC. <code>TLS_CHACHA20_POLY1305_SHA256</code> Verwendet ChaCha20 f\u00fcr die Verschl\u00fcsselung und Poly1305 f\u00fcr die Authentifizierung, zusammen mit SHA-256. <p>Hier ist eine Liste von allen Cipher Suites, welche Mozilla Firefox unterst\u00fctzt: https://wiki.mozilla.org/Security/Cipher_Suites</p>"},{"location":"tls/glossar/wikipedia/","title":"Wikipedia-Artikel","text":""},{"location":"tls/glossar/wikipedia/#wikipedia-artikel","title":"Wikipedia-Artikel","text":"<ul> <li> Der englischsprachige Wikipedia-Artikel ist noch einiges umfangreicher. Welche Informationen finden Sie da zus\u00e4tzlich?</li> </ul> <p>https://en.wikipedia.org/wiki/Transport_Layer_Security</p>"},{"location":"tls/homelab/","title":"Homelab","text":""},{"location":"tls/homelab/#homelab","title":"Homelab","text":"<p>Ich habe damit begonnen, Traefik privat einzusetzen und dachte es passt gleich zum Thema, vielleicht finden Sie es auch interessant.</p>"},{"location":"tls/homelab/traefik/","title":"Traefik","text":""},{"location":"tls/homelab/traefik/#traefik","title":"Traefik","text":"<p>How our Traefik Proxy is set up.</p> <p>Like pretty much everything in ClusterStack at this point, Traefik runs in a Docker container. The Dashboard is only reachable from our internal network (so via VPN or GUI VM).</p>"},{"location":"tls/homelab/traefik/#dependencies","title":"Dependencies","text":"<p>APT-Packages required on the OS (Ubuntu 24.04) {.is-info}</p> Name Version <code>docker-ce</code> - <code>docker-ce-cli</code> - <code>containerd.io</code> - <code>docker-buildx-plugin</code> - <code>docker-compose-plugin</code> - <p>Follow the official installation guide of docker</p> <p>I also recommend running docker in a rootless environment</p>"},{"location":"tls/homelab/traefik/#build","title":"Build","text":"<p>This is just a basic example! The active <code>docker-compose.yml</code> file can be found here! {.is-warning}</p> <p><code>/home/stack/traefik/docker-compose.yml</code></p> <pre><code>version: '3'\n\nservices:\n  reverse-proxy:\n    # The official v3 Traefik docker image\n    image: traefik:v3.0\n    # Enables the web UI and tells Traefik to listen to docker\n    command: --api.insecure=true --providers.docker\n    ports:\n      # The HTTP port\n      - \"80:80\"\n      # The Web UI (enabled by --api.insecure=true)\n      - \"8080:8080\"\n    volumes:\n      # So that Traefik can listen to the Docker events\n      - /var/run/docker.sock:/var/run/docker.sock\n    whoami:\n    # A container that exposes an API to show its IP address\n    image: traefik/whoami\n    labels:\n      - \"traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)\"\n</code></pre>"},{"location":"tls/homelab/traefik/#config","title":"Config","text":"<p><code>/home/stack/traefik/traefik.yml</code></p> <pre><code>providers:\n  docker:\n    tls:\n      cert: ./certs/cert.pem\n      key: ./certs/key.pem\n</code></pre> <p>https://doc.traefik.io/traefik/routing/routers/#tls https://doc.traefik.io/traefik/providers/docker/#tls</p>"},{"location":"tls/homelab/traefik/#tls-in-traefik","title":"TLS in Traefik","text":"<p>https://doc.traefik.io/traefik/https/tls/</p>"}]}